{"meta":{"title":"LoliMay's Blog","subtitle":null,"description":"万丈高楼平地起,勿在浮沙筑高台","author":"LoliMay","url":"http://www.lolimay.cn"},"pages":[{"title":"常用书签","date":"2018-02-16T19:41:18.000Z","updated":"2018-03-11T10:41:55.938Z","comments":true,"path":"bookmark/index.html","permalink":"http://www.lolimay.cn/bookmark/index.html","excerpt":"","text":"Thinking Realm 码农场 鑫空间,鑫生活 sea.js介绍 Hexo优化 添加文章置顶功能"},{"title":"","date":"2017-02-12T06:26:05.000Z","updated":"2018-03-16T11:55:05.261Z","comments":true,"path":"about/about.html","permalink":"http://www.lolimay.cn/about/about.html","excerpt":"","text":"function showImg(e, id) { var image = document.getElementById(id); var corX= e.clientX-200; var corY= e.clientY-50; image.style.left = corX + 'px'; image.style.top = corY + 'px'; image.style.display = \"block\"; } function hideImg(name) { document.getElementById(name).style.display = \"none\"; } function detectmob() { if(window.innerWidth"},{"title":"categories","date":"2018-06-15T18:02:44.000Z","updated":"2018-06-15T18:02:45.004Z","comments":true,"path":"categories/index.html","permalink":"http://www.lolimay.cn/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-06-15T17:05:39.000Z","updated":"2018-06-15T17:05:39.227Z","comments":true,"path":"tags/index.html","permalink":"http://www.lolimay.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"神经网络入门","slug":"神经网络入门","date":"2018-07-26T07:12:31.000Z","updated":"2018-07-27T16:20:32.539Z","comments":true,"path":"2018/07/26/神经网络入门/","link":"","permalink":"http://www.lolimay.cn/2018/07/26/神经网络入门/","excerpt":"","text":"原文链接: http://www.ruanyifeng.com/blog/2017/07/neural-network.html 感知器(perceptron) 接收多个输入产生一个输出 权重与阈值(weight and threshold) 每个决定输出的因素都带有权重(weight)，代表它们的重要性。 当各种决定输出因素的权重(weight)之和大于阈值(threshold)时输出为真, 否则输出为假。 决策模型 底层感知器接收外部输入，作出判断之后，再发出信号，作为上层感知器的输入。 RNN(Recurrent Neural Network) 递归神经网络（信号发生循环传递） 矢量化 外部因素x1, x2, x3 写成矢量&lt;x1, x3, x3&gt;, 简写为 x 权重w1, w2, w3 写成矢量(w1, w2, w3), 简写为 w 定义b等于负的阈值, b = -threshold 则感知器模型的数学表达如下： 搭建神经网络的三个条件 输入和输出 权重(w)和阈值的相反数(b) 多层感知器结构 模型的训练通过试错法,不断尝试对w和b的值进行微小变动, 直到得到对应最精确输出的那组 w 和 b, 这个过程称为模型的训练。 以下是我与老师的对话记录 我: 老师，用数据集去训练模型是为了去估算权重和阈值，是这样的吗? 老师: 对，权重和阈值就是网络参数。把参数用训练数据求解出来，然后对新数据进行处理和预测。 我: 我们需要做的是什么呢? 选择一个合适的神经网络模型吗? 老师: 设计网络结构，构造训练数据，拿数据训练网络，即求解参数，最后拿训练好的网络处理新的数据。 输出的连续性12z = wx + b //感知器的计算结果σ(z) = 1 / (1 + e^(-z)) //将结果变成sigmoid function化 σ(z) → 1 感知器强烈匹配 σ(z) → 0 感知器强烈不匹配","categories":[],"tags":[{"name":"神经网络","slug":"神经网络","permalink":"http://www.lolimay.cn/tags/神经网络/"}]},{"title":"HTTP简介","slug":"HTTP入门","date":"2018-07-26T06:37:48.000Z","updated":"2018-07-27T16:20:33.179Z","comments":true,"path":"2018/07/26/HTTP入门/","link":"","permalink":"http://www.lolimay.cn/2018/07/26/HTTP入门/","excerpt":"","text":"定义HTTP协议是Hyper Text Transfer Protocol(超文本传输协议)的缩写, 是用于从服务器传输超文本到浏览器的传送协议。 浏览器作为HTTP客户端通过URL向HTTP服务端即Web服务器发送所有请求 Web服务器根据接收到的请求后, 向客户端发送响应消息。注意HTTP是无连接的、媒体独立的、无状态的。 HTTP消息结构客户端请求消息 如:1234GET /hello.txt HTTP/1.1User-Agent: curl/7.16.3 libcurl/7.16.3 OpenSSL/0.9.7l zlib/1.2.3Host: www.example.comAccept-Language: en, mi 服务端响应消息 如:123456789HTTP/1.1 200 OKDate: Mon, 27 Jul 2009 12:28:53 GMTServer: ApacheLast-Modified: Wed, 22 Jul 2009 19:15:56 GMTETag: \"34aa387-d-1568eb00\"Accept-Ranges: bytesContent-Length: 51Vary: Accept-EncodingContent-Type: text/plain 参考链接: http://www.runoob.com/http/http-tutorial.html","categories":[],"tags":[{"name":"HTTP","slug":"HTTP","permalink":"http://www.lolimay.cn/tags/HTTP/"}]},{"title":"激进的margin","slug":"激进的margin","date":"2018-07-25T14:25:55.000Z","updated":"2018-07-25T14:25:43.224Z","comments":true,"path":"2018/07/25/激进的margin/","link":"","permalink":"http://www.lolimay.cn/2018/07/25/激进的margin/","excerpt":"","text":"margin的百分比值与负值百分比值和padding一样, margin的百分比总是相对于父级元素的宽度计算的 负值margin支持负值 元素尺寸的相关概念 元素内部尺寸, 又叫元素可视尺寸, 即padding-box的尺寸, 对应于DOM API中的clientWidth和clientHeight 元素尺寸, 又叫元素偏移尺寸, 即border-box的尺寸, 对应于DOM API中的offsetWidth和offsetHeight 元素外部尺寸, 即margin-box的尺寸 margin与元素的内部尺寸的关系 当元素定宽或者为表现为包裹性时, margin对元素的内部尺寸无影响 当元素表现为流动性时, margin对元素的内部尺寸有影响总结: 当且仅当元素在某一方向表现为流动性时, margin对元素的内部尺寸才有影响. 元素在垂直方向上的流动性会在绝对定位中讲到..先别慌 margin与元素的外部尺寸的关系只要元素具有块状特性, 无论有没有设置宽髙、无论水平方向还是垂直方向, 即使发生了margin合并, margin对外部尺寸总是会有影响. margin无效的几种情形 inline非替换元素的垂直margin无效 注意是内联非替换元素, 对于内联替换元素来说, 不仅垂直margin有效, 而且不会发生margin合并现象. 表格中的&lt;tr&gt;和&lt;td&gt;元素或者display计算值为table-cell和table-row的margin无效 定高容器子元素的margin-bottom或者宽度定死的子元素的margin-right无效 若想使用margin改变自身的位置, 必须是和当前元素定位方向一样的margin属性才可以, 否则, margin只能影响后面的元素或者父元素。 *发生了margin合并(如父子margin重叠) *绝对定位元素非定位方位的margin值无效 *鞭长莫及导致的margin无效(FLAG: flow+overflow) *内联特性导致的margin无效(FLAG: 5.3) margin合并margin:auto","categories":[],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/tags/CSS/"},{"name":"CSS世界读书笔记","slug":"CSS世界读书笔记","permalink":"http://www.lolimay.cn/tags/CSS世界读书笔记/"}]},{"title":"编写shell脚本","slug":"编写shell脚本","date":"2018-07-25T11:09:27.000Z","updated":"2018-07-25T11:51:23.982Z","comments":true,"path":"2018/07/25/编写shell脚本/","link":"","permalink":"http://www.lolimay.cn/2018/07/25/编写shell脚本/","excerpt":"","text":"获取自动化脚本并执行1wget -O install.sh http://yun.lolimay.cn/ipv6.sh &amp;&amp; chmod a+x install.sh &amp;&amp; sh install.sh 输入带颜色的字 https://blog.csdn.net/andylauren/article/details/60873400 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#!/bin/bash##下面是字体输出颜色及终端格式控制#字体色范围：30-37echo -e \"\\033[30m 黑色字 \\033[0m\"echo -e \"\\033[31m 红色字 \\033[0m\"echo -e \"\\033[32m 绿色字 \\033[0m\"echo -e \"\\033[33m 黄色字 \\033[0m\"echo -e \"\\033[34m 蓝色字 \\033[0m\"echo -e \"\\033[35m 紫色字 \\033[0m\"echo -e \"\\033[36m 天蓝字 \\033[0m\"echo -e \"\\033[37m 白色字 \\033[0m\"#字背景颜色范围：40-47echo -e \"\\033[40;37m 黑底白字 \\033[0m\"echo -e \"\\033[41;30m 红底黑字 \\033[0m\"echo -e \"\\033[42;34m 绿底蓝字 \\033[0m\"echo -e \"\\033[43;34m 黄底蓝字 \\033[0m\"echo -e \"\\033[44;30m 蓝底黑字 \\033[0m\"echo -e \"\\033[45;30m 紫底黑字 \\033[0m\"echo -e \"\\033[46;30m 天蓝底黑字 \\033[0m\"echo -e \"\\033[47;34m 白底蓝字 \\033[0m\" #控制选项说明#\\033[0m 关闭所有属性#\\033[1m 设置高亮度#\\033[4m 下划线echo -e \"\\033[4;31m 下划线红字 \\033[0m\"#闪烁echo -e \"\\033[5;34m 红字在闪烁 \\033[0m\"#反影echo -e \"\\033[8m 消隐 \\033[0m \" #\\033[30m-\\033[37m 设置前景色#\\033[40m-\\033[47m 设置背景色#\\033[nA光标上移n行#\\033[nB光标下移n行echo -e \"\\033[4A 光标上移4行 \\033[0m\"#\\033[nC光标右移n行#\\033[nD光标左移n行#\\033[y;xH设置光标位置#\\033[2J清屏#\\033[K清除从光标到行尾的内容echo -e \"\\033[K 清除光标到行尾的内容 \\033[0m\"#\\033[s 保存光标位置#\\033[u 恢复光标位置#\\033[?25| 隐藏光标#\\033[?25h 显示光标echo -e \"\\033[?25l 隐藏光标 \\033[0m\"echo -e \"\\033[?25h 显示光标 \\033[0m\" 怎么判断一个基本命令执行成功1$?符号显示上一条命令的返回值，如果为0则代表执行成功，其他表示失败","categories":[],"tags":[{"name":"shell","slug":"shell","permalink":"http://www.lolimay.cn/tags/shell/"}]},{"title":"在命令行打印表格","slug":"在命令行打印表格","date":"2018-07-25T08:12:11.000Z","updated":"2018-07-27T16:20:33.067Z","comments":true,"path":"2018/07/25/在命令行打印表格/","link":"","permalink":"http://www.lolimay.cn/2018/07/25/在命令行打印表格/","excerpt":"","text":"主要参考链接为百度百科关于制表符号的解释 https://baike.baidu.com/item/%E5%88%B6%E8%A1%A8%E7%AC%A6 1234567891011void Print(SqList *L)&#123; printf(\"\\n\\t\\t 药品销售统计表(按销售额排序)\"); printf(\"\\n\\t┌─────┬─────────────┬─────────┬───────┬───────┐\\n\"); printf(\"\\t│ 编号│\\t名称\\t │\\t单价 │\\t销售量│\\t销售额│\\t\\n\"); for(int i=1;i&lt;=L-&gt;length;i++) &#123; printf(\"\\t├─────┼─────────────┼─────────┼───────┼───────┤\\n\"); printf(\"\\t│ %s│\\t%s │\\t%.2f │\\t %d │\\t%.2f│\\t\\n\",L-&gt;r[i].num,L-&gt;r[i].name,L-&gt;r[i].price,L-&gt;r[i].sell_num,L-&gt;r[i].sell_money); &#125; printf(\"\\t└─────┴─────────────┴─────────┴───────┴───────┘\\n\\n\");&#125; 运行截图","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://www.lolimay.cn/tags/C/"},{"name":"小技巧","slug":"小技巧","permalink":"http://www.lolimay.cn/tags/小技巧/"}]},{"title":"chrome插件分享","slug":"chrome插件分享","date":"2018-07-25T03:23:05.000Z","updated":"2018-07-25T03:30:05.539Z","comments":true,"path":"2018/07/25/chrome插件分享/","link":"","permalink":"http://www.lolimay.cn/2018/07/25/chrome插件分享/","excerpt":"","text":"GreenChrome 双击关闭标签页 支持鼠标手势 右键搜","categories":[],"tags":[{"name":"chrome","slug":"chrome","permalink":"http://www.lolimay.cn/tags/chrome/"},{"name":"分享","slug":"分享","permalink":"http://www.lolimay.cn/tags/分享/"}]},{"title":"温和的padding","slug":"温和的padding","date":"2018-07-24T12:47:58.000Z","updated":"2018-07-25T02:06:56.330Z","comments":true,"path":"2018/07/24/温和的padding/","link":"","permalink":"http://www.lolimay.cn/2018/07/24/温和的padding/","excerpt":"","text":"padding的百分比值与height等属性的百分比计算规则不一样, padding百分比值无论是水平方向还是垂直方向都是相对于宽度计算的。123456div &#123; padding: 50%; /* 正方形 */&#125;div &#123; padding: 25% 50%; /* 宽髙比2:1的矩形 */&#125; 内联元素与padding内联元素垂直padding的层叠现象1234567a &#123; padding-top: 50px; padding-bottom: 50px; /* 真的是纯视觉层叠吗? */ background: yellow;&#125;a&#123;这是一个padding&#125;*50 应用 增加链接点击区域的大小 CSS中几种层叠现象总结纯视觉层叠(不影响外部尺寸) box-shadow 盒装阴影 outline 轮廓 视觉层叠(影响外部尺寸) inline元素的垂直padding 判断依据: 层叠区域超出父容器后会不会出现滚动条 内联元素padding的换行现象1234567.box &#123; border: 2px dashed #cd0000;&#125;span &#123; padding: 50%; background: gray;&#125; 幽灵空白结点(strut)与内联元素的padding12345span &#123; padding: 50%; background: red; /* font-size: 0; */&#125; 实战: 利用padding绘制图形绘制”三道杠”123456789.icon-menu &#123; display: inline-block; width: 140px; height: 10px; padding: 35px 0; border-top: 10px solid; border-bottom: 10px solid; background-color: currentColor; background-clip: content-box;&#125; 绘制双层圆点123456789.icon-dot &#123; display: inline-block; width: 100px; height: 100px; padding: 10px; border: 10px solid; border-radius: 50%; background-color: currentColor; background-clip: content-box;&#125;","categories":[],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/tags/CSS/"},{"name":"CSS读书笔记","slug":"CSS读书笔记","permalink":"http://www.lolimay.cn/tags/CSS读书笔记/"}]},{"title":"content内容生成技术","slug":"content内容生成技术","date":"2018-07-21T10:43:18.000Z","updated":"2018-07-25T00:49:22.273Z","comments":true,"path":"2018/07/21/content内容生成技术/","link":"","permalink":"http://www.lolimay.cn/2018/07/21/content内容生成技术/","excerpt":"","text":"替换元素与非替换元素之间的区别1. 只差一个src属性12&lt;img alt=\"任意值\"&gt; 非替换元素&lt;img src=\"\" alt=\"任意值\"&gt; 替换元素 1234img &#123; display: block; /* img的宽度是多少? */ outline: solid;&#125; 2. 只差一个CSS content属性1234img &#123; content: url(1.jpg) &#125;&lt;img&gt;&lt;img src=\"1.jpg\"&gt; 如果图片原来是有src属性，也可以通过content属性替换文件的内容1234&lt;img src=\"laugh.jpg\"&gt;img:hover &#123; content: url(tear.jpg); /* 这里立个flag */&#125; h1典型的非替换元素对吧，来我们给他加个content属性12345&lt;h1&gt;这是一个标题&lt;/h1&gt;h1 &#123; content: url(logo.png) /* 光速变成一个替换元素 */&#125; 3. content生成内容的特性content属性生成的对象被称为”匿名替换元素” 1. content生成的文本无法复制、无法选中2. 不能左右:empty伪类3. 生成的图片获取不到链接(右击保存的仍是原有图片的链接)(看前面的flag)总的来说，content内容生成的元素仅仅只是影响视觉呈现，并不能通过JavaScript获取得到content生成的内容对象。 content内容生成技术(今天的重点)因为content内容生成技术几乎都是用在伪元素::before和::after(mdn光速查询这个两个关键字)这两个伪元素中，因此content内容生成技术又被叫做::before和::after伪元素技术。 1.content辅助元素生成(用于辅助实现两端对齐、垂直居中、上边缘、下边缘等对齐效果)由于内容太过深入…在此立个FLAG以后会深入讲 2. content字符内容生成12345678910111213&lt;span class=\"icon-home\"&gt;&lt;/span&gt;css:@font-face &#123; /* 定义自定义字体 */font-family: \"myico\"; /* 定义字体名 */src: url(\"myfont.woff\") format(\"woff); /* 定义字体路径及格式 */&#125;.icon-home:before &#123; font-size: 64px; font-family: myicon; content: \"x\";&#125; 3. content图片内容生成123456789div::before &#123; content: url(1.jpg)&#125;/* 其实不是很实用，content生成的图片不能控制大小 *//* 所以一般用background代替 */div::before &#123; content: ''; background: url('bg.ico1') 50px 50px;&#125; 4. content属性值内容生成动态生成一个元素的属性123img::after &#123; /* Firefox下::before伪元素content值会被无视，尽量用::after */content: attr(alt); /* 给img生成alt属性 */&#125; 123.icon::before &#123; content: attr(data-title); /* 也支持生成自定义属性 */&#125; ★5.深入理解content计数器 content计数器只支持整数 支持负数 属性 counter-reset 声明计数器并指定初始值(默认是0) 12345678910.cnt &#123; counter-reset: wangxiaoer; /* 声明计数器王小二 默认初始值为0 */&#125;.cnt &#123; counter-reset: wangxiaoer 2; /* 声明计数器王小二并指定初始值为2 */&#125;.cnt &#123; counter-reset: wangxiaoer 2 wangxiaosan 3; /* 也可以同时声明多个计数器 */&#125; 属性 counter-increment 计数器递增(默认递增1) 12345678.cnt &#123; counter-reset: wangxiaoer; /* 声明计数器王小二 默认初始值为0 */ counter-increment: wangxiaoer; /* 计数器开始递增 默认递增1 */&#125;.cnt &#123; counter-reset: wangxiaoer; /* 声明计数器王小二 默认初始值为0 */ counter-increment: wangxiaoer 2; /* 计数器开始递增 每次递增2 */&#125; 方法 counter(name, style) 显示计数(支持级联) 方法 counters(name, string) 嵌套计数","categories":[],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/tags/CSS/"},{"name":"CSS世界读书笔记","slug":"CSS世界读书笔记","permalink":"http://www.lolimay.cn/tags/CSS世界读书笔记/"}]},{"title":"新手指引","slug":"新手指引","date":"2018-07-19T03:53:11.000Z","updated":"2018-07-19T04:23:15.072Z","comments":true,"path":"2018/07/19/新手指引/","link":"","permalink":"http://www.lolimay.cn/2018/07/19/新手指引/","excerpt":"","text":"Git点击查看教程 要求 了解git是什么、用途是什么 学会git的基本用法 github点击查看教程 要求 了解github 学会使用github 加入我们的Organizations - CurdBin里面有一堆共享的学习资源哦~ 点击加入","categories":[],"tags":[{"name":"教程","slug":"教程","permalink":"http://www.lolimay.cn/tags/教程/"}]},{"title":"替换元素与非替换元素","slug":"替换元素与非替换元素","date":"2018-07-14T04:59:58.000Z","updated":"2018-07-27T16:20:33.111Z","comments":true,"path":"2018/07/14/替换元素与非替换元素/","link":"","permalink":"http://www.lolimay.cn/2018/07/14/替换元素与非替换元素/","excerpt":"","text":"content与替换元素替换元素(replaced element): 元素内容是否可替换。 根据外在盒子是内联还是块级我们可以把元素分为内联元素还是块级元素，而根据元素内容是否可替换，把元素分为替换元素和非替换元素。 如:1&lt;img&gt;、&lt;object&gt;、&lt;video&gt;、&lt;iframe&gt;、&lt;textarea&gt;、&lt;input&gt;、&lt;select&gt; 替换元素的性质 内容的外观不受页面上的CSS的影响 1input[type='checkbox'] 有自己的尺寸 大部分替换元素的默认尺寸是300x150px，少部分替换元素的默认尺寸为0x0px，表单替换元素的尺寸则和浏览器有关。 在很多CSS属性上有自己的一套表现规则1vertical-align: bottom; /* 基线是元素的下边缘 */ 替换元素的尺寸计算规则内联替换元素和块级替换元素使用一下同一套尺寸计算规则。 固有尺寸 替换内容原本的尺寸(图片、视频原本的尺寸、表单元素的固有尺寸由浏览器定义) HTML尺寸 通过HTML原生属性设置的尺寸123&lt;img width=\"300\" height=\"100\"&gt;&lt;input type=\"file\" size=\"30\"&gt;&lt;textarea cols=\"20\" rows=\"5\"&gt; CSS尺寸即元素的content box123456img &#123; width: 100px; height: 200px; max-width: 300px; min-height: 100px;&#125; 优先级: CSS尺寸&gt;HTML尺寸&gt;固有尺寸 替换元素的object-fit12345img &#123; object-fit: fill; /* 默认 */ object-fit: contain; object-fit: none;&#125; 替换元素与流动性1234textarea &#123; width: 100%; box-sizing: border-box;&#125;","categories":[],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/tags/CSS/"},{"name":"CSS世界读书笔记","slug":"CSS世界读书笔记","permalink":"http://www.lolimay.cn/tags/CSS世界读书笔记/"}]},{"title":"流、元素与基本尺寸(下)","slug":"流、元素与基本尺寸-下","date":"2018-07-11T18:21:58.000Z","updated":"2018-07-27T16:20:33.033Z","comments":true,"path":"2018/07/12/流、元素与基本尺寸-下/","link":"","permalink":"http://www.lolimay.cn/2018/07/12/流、元素与基本尺寸-下/","excerpt":"","text":"min-width/max-width/min-height/max-height为流体而生的min-width/max-width1234.container &#123; min-width: 1200px; max-width: 1400px;&#125; 超越 !important12&lt;img src=\"1.jpg\" style=\"width:480px!important\"&gt;img &#123; max-width: 256px; &#125; 超越最大1234.container &#123; min-width: 1400px; max-width: 1200px;&#125; 再谈内联元素外在盒子是内联盒子的元素称为内联元素 内联盒模型1&lt;p&gt;这是一行普通的文字，这里有个 &lt;em&gt;em&lt;/em&gt; 标签。&lt;/p&gt; 1. 内容区域(content area)通常情况下，文字的选中背景可以反映出内容区域的范围(排除垂直padding的情况)。 2. 内联盒子(inline box)内联盒子不会让内容成块显示，而是排成一行，直到这行空间不够再换行。 内联盒子 匿名内联盒子(光秃秃的文字)3. 行框盒子(line box)每一行就是一个行框盒子4. 包含块(containing box)包含块由一个或多个行框盒子组成，这里的包含块就是&lt;p&gt;标签 幽灵空白结点(特别重要) Each line box starts with a zero-width inline box with the element’s font and line height properties. We call that imaginary box a “strut”. 每个行框盒子的前面有一个空白结点，这个空白结点永远透明，不占据任何宽度，看不见也无法通过脚本获取。 12345678div&gt;spandiv &#123; background: #666;&#125;span &#123; display: inline-block;&#125;","categories":[],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/tags/CSS/"},{"name":"CSS读书笔记","slug":"CSS读书笔记","permalink":"http://www.lolimay.cn/tags/CSS读书笔记/"}]},{"title":"流、元素与基本尺寸(中)","slug":"流、元素与基本尺寸-中","date":"2018-07-10T12:21:07.000Z","updated":"2018-07-27T16:20:33.023Z","comments":true,"path":"2018/07/10/流、元素与基本尺寸-中/","link":"","permalink":"http://www.lolimay.cn/2018/07/10/流、元素与基本尺寸-中/","excerpt":"","text":"流、元素与基本尺寸(中)深入最大宽度最大宽度就是元素可以有的最大宽度，也就是连续内联盒子的宽度。 演示页面 流动性与无宽度准则无宽度准则就是说，尽可能不要为元素设置宽度，否则会造成流动性丢失。 1. width:auto 等价于 width:100% ?对于块级元素而言，width:auto 指的是 content内容区域充分利用剩余水平空间、width:100% 指的是 content内容区域 占容器(父元素的content区域就是容器) 宽度的100% 演示页面 2. 再谈流动性所谓流动性，指的是块级元素的 content内容区域对剩余可用宽度的充分利用。(即width:auto的特性一：充分利用可用空间的特性) 3. 宽度分离原则即用父元素去限制宽度，子元素设置内外边距以及边框。12345678.father &#123; width: 120px;&#125;.child &#123; /* 利用子元素 content 的流动性 */ margin: 20px; border: 20px; padding: 20px;&#125; 4. box-sizingbox-sizing用于改变width/height的作用细节12.box &#123; box-sizing: content-box; &#125; /* 默认值 */.box &#123; box-sizing: border-box; &#125; CSS中的高度CSS默认的文档流是水平方向的，宽度是稀缺的，高度是无限的。 1. 相对单纯的 height:autoheight:auto 即是元素的默认高度 一个div高50px，三个div叠起来多少px? 150px。 2. 关于height:100%和width:100%不同，当父元素的高度为auto时，子元素的height:100%无效","categories":[],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/tags/CSS/"},{"name":"CSS读书笔记","slug":"CSS读书笔记","permalink":"http://www.lolimay.cn/tags/CSS读书笔记/"}]},{"title":"使路由器支持IPV6","slug":"使路由器支持IPV6","date":"2018-07-09T04:25:55.000Z","updated":"2018-07-27T16:20:33.078Z","comments":true,"path":"2018/07/09/使路由器支持IPV6/","link":"","permalink":"http://www.lolimay.cn/2018/07/09/使路由器支持IPV6/","excerpt":"","text":"原理 NAT6步骤预热 为固件刷上openwrt或基于openwrt的固件(如潘多拉、lede等) 地址栏输入192.168.1.1配置好后台密码并开启ssh 在终端中ssh root@192.168.1.1连接进openwrt 安装kmod-iptnat61opkg update &amp;&amp; opkg install kmod-ipt-nat6 将IPv6 ULA Prefix由f改为d1uci set network.globals.ula_prefix=\"$(uci get network.globals.ula_prefix | sed 's/^./d/')\" &amp;&amp; uci commit network 将DHCP服务器设置为总是广播默认路由1uci set dhcp.lan.ra_default='1' &amp;&amp; uci commit dhcp 生成NAT6脚本1touch /etc/init.d/nat6 &amp;&amp; vi /etc/init.d/nat6 将链接中的内容复制进去并保存1chmod +x /etc/init.d/nat6 &amp;&amp; /etc/init.d/nat6 enable 防火墙配置Allow-ICMPv6-Forward1uci set firewall.@rule[\"$(uci show firewall | grep 'Allow-ICMPv6-Forward' | cut -d'[' -f2 | cut -d']' -f1)\"].enabled='0' &amp;&amp; uci commit firewall 接收广播并开启IPv6转发1vi /etc/sysctl.conf 修改/etc/sysctl.conf文件, 把文件中相关内容改为以下内容，没有的话就添加1234net.ipv6.conf.default.forwarding=2 net.ipv6.conf.all.forwarding=2 net.ipv6.conf.default.accept_ra=2 net.ipv6.conf.all.accept_ra=2 加入转发规则1vi /etc/firewall.user 修改/etc/firewall.user文件, 末尾添加一下内容1ip6tables -t nat -I POSTROUTING -s $(uci get network.globals.ula_prefix) -j MASQUERADE 设置每日定时重启(可选)由于路由器每过一段时间LAN口和wifi会打不开IPv6站点, 重启后恢复。(目前不知道原因, 知道原因的也可评论告知我, 万分感谢), 所以需要设置每日定时重启12crontab -e30 4 * * * sleep 1m &amp;&amp; touch /etc/banner &amp;&amp; reboot -f 2&gt;/dev/null 重启路由器1reboot 此时你的手机连上wifi后应该能连上六维空间等IPv6站点了, 恭喜折腾成功! 踩坑记录 collected errors原因是软件源里面没有此包, 解决方法: 找到你的固件的软件包仓库, 例如我的路由器是小米mini,架构是mipsel_24kc则根据它的的仓库是 http://downloads.lede-project.org/snapshots/targets/ramips/mt7621/packages/ 在后台Software-&gt;Config更新opkg的源就好了.","categories":[],"tags":[{"name":"路由器","slug":"路由器","permalink":"http://www.lolimay.cn/tags/路由器/"}]},{"title":"流、元素与基本尺寸(上)","slug":"流、元素与基本尺寸-上","date":"2018-07-09T02:21:07.000Z","updated":"2018-07-27T16:20:33.078Z","comments":true,"path":"2018/07/09/流、元素与基本尺寸-上/","link":"","permalink":"http://www.lolimay.cn/2018/07/09/流、元素与基本尺寸-上/","excerpt":"","text":"","categories":[],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/tags/CSS/"},{"name":"CSS世界读书笔记","slug":"CSS世界读书笔记","permalink":"http://www.lolimay.cn/tags/CSS世界读书笔记/"}]},{"title":"AHK模板文件的路径","slug":"AHK模板文件的路径","date":"2018-07-01T13:37:20.000Z","updated":"2018-07-01T13:38:54.912Z","comments":true,"path":"2018/07/01/AHK模板文件的路径/","link":"","permalink":"http://www.lolimay.cn/2018/07/01/AHK模板文件的路径/","excerpt":"","text":"C:\\Windows\\ShellNew","categories":[],"tags":[{"name":"AutoHotKey","slug":"AutoHotKey","permalink":"http://www.lolimay.cn/tags/AutoHotKey/"}]},{"title":"如何去除Linux文件的^M字符","slug":"如何去除Linux文件的M字符","date":"2018-06-25T06:20:25.000Z","updated":"2018-06-25T06:22:47.919Z","comments":true,"path":"2018/06/25/如何去除Linux文件的M字符/","link":"","permalink":"http://www.lolimay.cn/2018/06/25/如何去除Linux文件的M字符/","excerpt":"","text":"命令行输入1dos2unix filename","categories":[],"tags":[{"name":"Git","slug":"Git","permalink":"http://www.lolimay.cn/tags/Git/"}]},{"title":"JavaScript中如何实现深复制","slug":"JavaScript中如何实现深复制","date":"2018-06-21T09:17:21.000Z","updated":"2018-06-21T09:31:28.701Z","comments":true,"path":"2018/06/21/JavaScript中如何实现深复制/","link":"","permalink":"http://www.lolimay.cn/2018/06/21/JavaScript中如何实现深复制/","excerpt":"","text":"浅复制只复制一层对象的属性，修改新的对象的属性也会影响原来的对象。JavaScript中最常见的赋值操作就是浅复制。 深复制则递归复制了原有对象所有层级，修改新的对象不会影响原来的对象。可以通过下面的方法实现深复制：1newObj = JSON.parse(JSON.stringify(originObj))","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.lolimay.cn/tags/JavaScript/"}]},{"title":"jQuery插件的编写和使用","slug":"jQuery插件的编写和使用","date":"2018-06-20T13:28:15.000Z","updated":"2018-06-20T14:57:01.786Z","comments":true,"path":"2018/06/20/jQuery插件的编写和使用/","link":"","permalink":"http://www.lolimay.cn/2018/06/20/jQuery插件的编写和使用/","excerpt":"","text":"一、背景知识编写插件的目的是给已有的一系列方法或函数做一个封装，以便在其他地方重复使用，方便后期维护和提供开发效率。jQuery 的插件一共分为 3 种类型 封装对象方法的插件(最常见的一种插件) 封装全局函数的插件 选择器插件 二、编写插件1. 编写插件应在闭包中进行1234(function($) &#123; //此处将$作为匿名函数的形参 /* 这里放置插件的代码 */&#125;)(jQuery); //这里将jQuery作为实参传递给匿名函数 2. jQuery 插件的机制(1) jQuery提供的两个方法jQuery 提供两个用于扩展 jQuery 功能的方法,jQuery.fn.extend()方法和jQuery.extend()方法。 jQuery.fn.extend() 用于拓展 jQuery 第一类插件，即封装对象方法的插件 jQuery.extend() 用于拓展 jQuery 后两类插件，即封装全局函数的插件和选择器插件。 这两个方法都接受一个参数，类型为Object，Object对象的”名/值对”分别代表”函数或方法名/函数主体”。 (2) jQuery.extend()方法jQuery.extend()方法除了可以用于拓展 jQuery 对象之外，还有一个很强大的功能，就是用于拓展已有的 Object 对象。 1jQuery.extend(target, obj1, obj2, ..., objn) 例 合并 settings 对象和 options 对象，修改并返回 settings 对象 1234var settings = &#123; validate: false, limit: 5 , name: 'foo' &#125;var options = &#123; validate: true, name: 'bar' &#125;var newOptions = jQuery.extend(settings, options)// 结果: newOptions = &#123; validate: true, limit: 5, name: 'bar' &#125; 因此，jQuery.extend()方法经常被用于设置插件方法的一系列默认参数：123456789function foo(options) &#123; options = jQuery.extend(&#123; name: 'bar', length: 5, dataType: 'xml' /* 默认参数 */ &#125;, options) /* options为传递的传递的参数 */&#125;// 用户调用 foo()方法的时候，在传递的参数options对象中设置了相应的值// 那么就使用设置的值，否则使用默认值 3. 编写封装对象方法的插件 编写设置和获取颜色的插件 待实现功能： 设置匹配元素的颜色 获取匹配的第一个元素的颜色 (1) 代码模板123456789(function($)&#123; $.fn.extend(&#123; color(value) &#123; // 这里编写插件代码 &#125; &#125;)&#125;)(jQuery)// 这里给这个方法提供一个参数value, 如果调用方法的时候传递了value这个参数, 那么就是用这个// 值来设置字体颜色; 否则就是获取匹配元素字体颜色的值","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"},{"name":"jQuery","slug":"jQuery","permalink":"http://www.lolimay.cn/tags/jQuery/"}]},{"title":"Epside1-时间复杂度的计算","slug":"Epside1-时间复杂度的计算","date":"2018-06-20T04:35:10.000Z","updated":"2018-07-27T16:20:32.967Z","comments":true,"path":"2018/06/20/Epside1-时间复杂度的计算/","link":"","permalink":"http://www.lolimay.cn/2018/06/20/Epside1-时间复杂度的计算/","excerpt":"","text":"算法的时间复杂度等于该算法中所有语句频度之和的同数量阶。例1 设n为3的倍数，请仔细阅读以下算法，分析其时间复杂度。1234567891011void Fun(int n)&#123; int i,j,x,y; for(i=1;i&lt;=n;i++) if(3*i&lt;=n) for(j=3*i;j&lt;=n;j++) &#123; x++; y=3*x+2; &#125;&#125; 解 注意本题重点是分析时间复杂度，不能直接给出答案O()，下面给出分析过程： 所有语句频度之和为故该算法的时间复杂度为O().","categories":[],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://www.lolimay.cn/tags/数据结构/"}]},{"title":"iframe中引用外部元素以及在外部引用iframe内部元素","slug":"在iframe中引用外部元素以及在外部引用iframe内部元素","date":"2018-06-19T16:01:44.000Z","updated":"2018-06-19T18:26:36.084Z","comments":true,"path":"2018/06/20/在iframe中引用外部元素以及在外部引用iframe内部元素/","link":"","permalink":"http://www.lolimay.cn/2018/06/20/在iframe中引用外部元素以及在外部引用iframe内部元素/","excerpt":"","text":"1.在外部引用iframe内部元素12var iframe = document.getElementById('iframeName')var iframeDoc = iframe.contentDocument || iframe.contentWindow.document 2.在iframe中引用外部元素1var outerDoc = parent.document 注意：以上适用于同域名同端口下的相互调用，不支持跨域请求。","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"}]},{"title":"windows美化踩坑","slug":"windows美化","date":"2018-05-28T06:16:38.000Z","updated":"2018-06-19T18:42:34.813Z","comments":true,"path":"2018/05/28/windows美化/","link":"","permalink":"http://www.lolimay.cn/2018/05/28/windows美化/","excerpt":"","text":"windows主题路径位置 1C:\\Windows\\Resources\\Themes 用Resource Hacker替换资源文件需要同名 3. diffTool.exediffTool可用于比较两个.msstyles文件的不同，从而可以为主题制作者借鉴其它主题中的闪光点。 diffTool比较后会输出一个different.txt文件，这个文件可读性比较差。","categories":[],"tags":[{"name":"美化","slug":"美化","permalink":"http://www.lolimay.cn/tags/美化/"}]},{"title":"搬瓦工ssh连接不上的原因","slug":"搬瓦工ssh连接不上的原因","date":"2018-05-26T14:04:51.000Z","updated":"2018-07-27T16:20:32.867Z","comments":true,"path":"2018/05/26/搬瓦工ssh连接不上的原因/","link":"","permalink":"http://www.lolimay.cn/2018/05/26/搬瓦工ssh连接不上的原因/","excerpt":"","text":"原因是搬瓦工服务器的ssh默认端口不是22 解决方案： 网页登录搬瓦工后台控制面板-&gt;打开交互式命令终端-&gt;输入以下命令 1vim /etc/ssh/sshd_config 查看配置文件，找到以下内容： 将端口号修改成22即可。","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.lolimay.cn/tags/Linux/"},{"name":"服务器","slug":"服务器","permalink":"http://www.lolimay.cn/tags/服务器/"}]},{"title":"Linux常用命令","slug":"linux常用命令","date":"2018-05-26T11:05:03.000Z","updated":"2018-06-19T18:56:21.776Z","comments":true,"path":"2018/05/26/linux常用命令/","link":"","permalink":"http://www.lolimay.cn/2018/05/26/linux常用命令/","excerpt":"","text":"1234mkdir ;新建文件夹touch ;新建文件chmod 777 path ;修改path的权限为777export GOOGLE_APPLICATION_CREDENTIALS=\"[PATH]\" ;设置环境变量","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.lolimay.cn/tags/Linux/"}]},{"title":"使用git cz取代传统的git commit","slug":"git cz","date":"2018-05-26T08:13:23.000Z","updated":"2018-07-27T16:20:32.828Z","comments":true,"path":"2018/05/26/git cz/","link":"","permalink":"http://www.lolimay.cn/2018/05/26/git cz/","excerpt":"","text":"算了，直接盗官方的图吧 看完是不是很心动呢? 什么! 你竟然没看懂什么意思…那我还是建议你先把git学会了再看我这篇教程吧… 推荐学习一个git的网址：git教程by廖雪峰 简而言之，git commit 就是你在做一次修改后类似于写一个备注，现在安装了commitizen后，你可以使用git cz取代git commit，每次提交的时候可以选择本次commit的类型，这样commit的文本会更具有可读性。 commitizen官方repo的commit就是基于commitizen构建的： 是不是很有逼格!所以就赶紧安装使用吧~ 最后，附上commitizen的github地址：commitizen 最后的最后（特别重要)，附上我的踩坑记录： 注意，在Windows环境下这段命令是不能正常运行的： Windows没有home路径，所有必须要走Windows的特色主义道路啦~ 解决方案： Step1 打开资源管理器，在地址栏输入 1C:\\Users\\%username% 回车，进入当前用户文件夹根目录 Step2 新建一个.czrc文件 文件内容为 1&#123; \"path\": \"cz-conventional-changelog\" &#125; 然后保存即可 其它步骤按照官方教程走即可…","categories":[],"tags":[{"name":"Git","slug":"Git","permalink":"http://www.lolimay.cn/tags/Git/"}]},{"title":"H5全屏api","slug":"H5全屏api","date":"2018-05-19T17:57:07.000Z","updated":"2018-06-19T18:43:44.964Z","comments":true,"path":"2018/05/20/H5全屏api/","link":"","permalink":"http://www.lolimay.cn/2018/05/20/H5全屏api/","excerpt":"","text":"12345678910function requestFullScreen(element) &#123; var de = document.querySelector(element) || document.documentElement; if (de.requestFullscreen) &#123; de.requestFullscreen(); &#125; else if (de.mozRequestFullScreen) &#123; de.mozRequestFullScreen(); &#125; else if (de.webkitRequestFullScreen) &#123; de.webkitRequestFullScreen(); &#125;&#125;","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"}]},{"title":"自定义vue-cli模板","slug":"自定义vue-cli模板","date":"2018-05-19T14:57:00.000Z","updated":"2018-06-19T18:44:15.071Z","comments":true,"path":"2018/05/19/自定义vue-cli模板/","link":"","permalink":"http://www.lolimay.cn/2018/05/19/自定义vue-cli模板/","excerpt":"","text":"环境配置1.使手机支持实时预览修改config/index.js下的localhost为0.0.0.0，即可支持手机预览 必备插件1.安装stylus-loader① npm安装stylus-loader 1npm i stylus stylus-loader --save-dev ② 修改.vue组件样式标签 123&lt;style lang='stylus'&gt; ...&lt;/style&gt; 2.导入normalize.css① npm安装normalize.css 1npm i normalize.css ② 在main.js中全局导入normalize.css 1import 'normalize.css' 3.使用模板删除node_modules文件夹后，将项目文件夹放在一个template文件夹下","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"},{"name":"Vue","slug":"Vue","permalink":"http://www.lolimay.cn/tags/Vue/"}]},{"title":"cmder为命令设置别名","slug":"cmder为命令设置别名","date":"2018-05-19T04:24:07.000Z","updated":"2018-07-27T16:20:32.856Z","comments":true,"path":"2018/05/19/cmder为命令设置别名/","link":"","permalink":"http://www.lolimay.cn/2018/05/19/cmder为命令设置别名/","excerpt":"","text":"为命令设置别名","categories":[],"tags":[{"name":"Cmder","slug":"Cmder","permalink":"http://www.lolimay.cn/tags/Cmder/"}]},{"title":"git常用命令速查","slug":"git常用命令速查","date":"2018-05-18T15:32:31.000Z","updated":"2018-07-27T16:20:32.989Z","comments":true,"path":"2018/05/18/git常用命令速查/","link":"","permalink":"http://www.lolimay.cn/2018/05/18/git常用命令速查/","excerpt":"","text":"1. 创建版本库1git init 2. 添加与提交123git add -A #提交所有变化(包括新文件、被修改的文件和被删除的文件)git commit -m \"message\" #将暂存区的所有内容提交到版本库 3. 分支的创建、切换与合并12345git checkout -b dev #创建分支dev并切换至新分支git checkout master #切换分支至mastergit merge dev #将dev分支的内容合并至master(假设你当前是在master分支下) 4. 撤销工作区所有更改1git reset --hard #撤销工作区所有修改并重置工作区 Git是目前世界上最先进的分布式版本控制系统 工作区(working directory)工作区就是你在电脑中能看到的目录 版本库(repository).git目录就是git版本库, 版本库里面存了很多东西, 其中最重要的就是暂存区(stage/index), 还有Git为我们自动创建的第一个分支master, 以及指向master的一个指针叫HEAD 暂存区(stage/index)暂存区(stage/index)是Git版本库中最重要的一个区域 2. Git操作的实际原理 git add 把文件修改添加到暂存区 git commit把暂存区的所有内容提交到当前分支 git status 显示工作区和暂存区的状态 git diff 显示工作区和暂存区的区别","categories":[],"tags":[{"name":"Git","slug":"Git","permalink":"http://www.lolimay.cn/tags/Git/"}]},{"title":"Word中的正则表达式记录","slug":"Word中的正则表达式记录","date":"2018-05-17T03:09:16.000Z","updated":"2018-07-27T16:20:32.878Z","comments":true,"path":"2018/05/17/Word中的正则表达式记录/","link":"","permalink":"http://www.lolimay.cn/2018/05/17/Word中的正则表达式记录/","excerpt":"","text":"查找单词在前面加一个空格","categories":[],"tags":[{"name":"正则表达式","slug":"正则表达式","permalink":"http://www.lolimay.cn/tags/正则表达式/"}]},{"title":"基于vue-router切换动画","slug":"基于vue-router切换动画","date":"2018-05-02T15:24:02.000Z","updated":"2018-06-19T18:46:35.473Z","comments":true,"path":"2018/05/02/基于vue-router切换动画/","link":"","permalink":"http://www.lolimay.cn/2018/05/02/基于vue-router切换动画/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031.slide-right-enter-active,.slide-right-leave-active,.slide-left-enter-active,.slide-left-leave-active &#123; will-change: transform; /* 完美解决切换抖动问题 */ transition: all 0.4s cubic-bezier(.55, 0, .1, 1); position: absolute; left:0; top: 76px; height: 100%; width: 100%; overflow: auto; -webkit-overflow-scrolling: touch;&#125;.slide-right-enter &#123; opacity: 0; transform: translate3d(-100%, 0, 0);&#125;.slide-right-leave-active &#123; opacity: 0; transform: translate3d(100%, 0, 0);&#125;.slide-left-enter &#123; opacity: 0; transform: translate3d(100%, 0, 0);&#125;.slide-left-leave-active &#123; opacity: 0; transform: translate3d(-100%, 0, 0);&#125;","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"},{"name":"Vue","slug":"Vue","permalink":"http://www.lolimay.cn/tags/Vue/"}]},{"title":"隐藏页面滚动条","slug":"隐藏页面滚动条","date":"2018-05-02T12:41:37.000Z","updated":"2018-07-25T00:54:02.883Z","comments":true,"path":"2018/05/02/隐藏页面滚动条/","link":"","permalink":"http://www.lolimay.cn/2018/05/02/隐藏页面滚动条/","excerpt":"","text":"12.element::-webkit-scrollbar &#123;display:none&#125; /* 隐藏垂直滚动条 */html&#123;overflow: hidden;&#125; /* 隐藏水平滚动条 */","categories":[],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/tags/CSS/"}]},{"title":"vue-cli引用组件的方法","slug":"vue-cli引用组件的方法","date":"2018-05-02T09:12:20.000Z","updated":"2018-06-19T18:46:46.151Z","comments":true,"path":"2018/05/02/vue-cli引用组件的方法/","link":"","permalink":"http://www.lolimay.cn/2018/05/02/vue-cli引用组件的方法/","excerpt":"","text":"Step1 import组件 Step2 注册组件 12345678910&lt;script&gt;import navigator from '@/components/Navigator'export default &#123; name: 'App', components: &#123; navigator &#125;&#125;&lt;/script&gt;","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"},{"name":"Vue","slug":"Vue","permalink":"http://www.lolimay.cn/tags/Vue/"}]},{"title":"ES6：export和import","slug":"ES6：export和import","date":"2018-04-20T17:08:08.000Z","updated":"2018-06-19T18:47:14.887Z","comments":true,"path":"2018/04/21/ES6：export和import/","link":"","permalink":"http://www.lolimay.cn/2018/04/21/ES6：export和import/","excerpt":"","text":"ES6模块主要有两个功能：export和import ，export用于定义模块对外的接口（一般而言，一个独立的js文件对应一个模块），import用于在一个模块中加载另一个含有export接口的模块。 1.export和import1.导入和导出单个变量export.js 1export var name='LoliMay' //导出name变量 import.js 123456789import &#123; name &#125; from './export.js' //从export.js中导入name变量export default &#123; data() &#123; return &#123; &#125; &#125;, created: function() &#123; alert(name) //弹出'LoliMay' &#125;&#125; 2.导入和导出多个变量export.js 123var name1 = 'George'var name2 = 'LoliMay'export &#123; name1, name2 &#125; //导出多个变量 import.js 12345678910import &#123; name1, name2 &#125; from './export.js' //从export.js中导入多个变量export default &#123; data () &#123; return &#123; &#125; &#125;, created: function() &#123; alert(name1) //弹出'George' alert(name2) //弹出'LoliMay' &#125;&#125; 3.导入和导出函数export.js 1234function add(x, y) &#123; return x+y&#125;export &#123; add &#125; //导出add函数 import.js 123456789import &#123; add &#125; from './export.js' //导入add函数export default &#123; data () &#123; return &#123; &#125; &#125;, created: function() &#123; alert(add(4,6)) //弹出'10' &#125;&#125; 由此可见，函数也是对象，它的导入和导出的格式同1一样。 2. export与export default的区别 在一个文件模块中，export、import可以有多个，export default仅有一个 通过export方式导出，在导入时要加{}，export default则不需要 使用export default指定默认输出，导入时允许为这个模块取任意名字 export不能与var，let，const一起用 123456789101112//export.jsexport const str = 'I am LoliMay.' //在同一个文件模块中export可以出现多次export function log(sth) &#123; return sth&#125;var name = 'LoliMay'export default name //在同一个文件模块中export default只能出现一次export default var age //错误，export不能与var、let或const一起用//import.jsimport &#123; str, log &#125; from './export.js' //通过export方式导出，在导入时要加&#123;&#125;import myName from './export.js' //通过export default方式导出，在导入时不需要加&#123;&#125;，且可以取任意名字","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"}]},{"title":"封装seltiplist组件","slug":"封装seltiplist组件","date":"2018-04-20T15:36:26.000Z","updated":"2018-06-19T18:47:31.896Z","comments":true,"path":"2018/04/20/封装seltiplist组件/","link":"","permalink":"http://www.lolimay.cn/2018/04/20/封装seltiplist组件/","excerpt":"","text":"1.编写组件1.清单依赖清单： underscore.min.js JavaScript工具库 编写清单： seltipoption.vue SelectTipOption，SelectTipList的子组件 seltiplist.vue SelectTipList，SelectTipOption的父组件 emitter.js 用于父子组件通讯 2.seltipoption.vue1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;template&gt; &lt;span class=\"tip\" @click=\"selectOptionClick\" :class=\"&#123;'active':itemSelected &#125;\"&gt;&#123;&#123;currentLabel&#125;&#125;&lt;/span&gt;&lt;/template&gt;&lt;script type=\"text/ecmascript-6\"&gt;import Emitter from '../util/emitter'var underscore = require('../lib/underscore.min')export default&#123; mixins: [Emitter], componentName: 'seltipoption', props: &#123; value: &#123; required: true &#125;, label: [String, Number] &#125;, computed: &#123; currentLabel () &#123; return this.label || ((typeof this.value === 'string' || typeof this.value === 'number') ? this.value : '') &#125;, parent () &#123; let result = this.$parent while (!result.istipSelect) &#123; result = result.$parent &#125; return result &#125;, itemSelected () &#123; if (!this.parent.multiple) &#123; return underscore._.isEqual(this.parent.value, this.value) &#125; else &#123; let isSelected = false this.parent.value.forEach((item, index) =&gt; &#123; if (underscore._.isEqual(item, this.value)) &#123; isSelected = true &#125; &#125;) return isSelected &#125; &#125; &#125;, methods: &#123; selectOptionClick () &#123; this.dispatch('seltiplist', 'handleOptionClick', this.value) &#125; &#125;&#125;&lt;/script&gt; 3.seltiplist.vue12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;template&gt; &lt;div&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/div&gt;&lt;/template&gt;&lt;script type=\"text/ecmascript-6\"&gt;import Emitter from '../util/emitter'var underscore = require('../lib/underscore.min')export default&#123; mixins: [Emitter], componentName: 'seltiplist', data () &#123; return &#123; istipSelect: true &#125; &#125;, props: &#123; value: &#123;&#125;, multiple: &#123; type: Boolean, default: false &#125; &#125;, mounted () &#123; this.$on('handleOptionClick', this.handleOptionSelect) &#125;, methods: &#123; handleOptionSelect (val) &#123; if (this.multiple &amp;&amp; underscore._.isArray(this.value)) &#123; let optionIndex = this.value.indexOf(val) this.value.forEach((item, index) =&gt; &#123; if (underscore._.isEqual(item, val)) &#123; optionIndex = index &#125; &#125;) if (optionIndex &lt; 0) &#123; this.value.push(val) &#125; else &#123; this.value.splice(optionIndex, 1) &#125; &#125; else &#123; if (val !== this.value) &#123; this.$emit('input', val) &#125; else &#123; this.$emit('input', '') &#125; &#125; &#125; &#125;&#125;&lt;/script&gt; 4.emitter.js1234567891011121314151617181920212223242526272829303132function broadcast (componentName, eventName, params) &#123; this.$children.forEach(child =&gt; &#123; var name = child.$options.componentName if (name === componentName) &#123; child.$emit.apply(child, [eventName].concat(params)) &#125; else &#123; broadcast.apply(child, [componentName, eventName].concat(params)) &#125; &#125;)&#125;export default &#123; methods: &#123; dispatch (componentName, eventName, params) &#123; var parent = this.$parent || this.$root var name = parent.$options.componentName while (parent &amp;&amp; (!name || name !== componentName)) &#123; parent = parent.$parent if (parent) &#123; name = parent.$options.componentName &#125; &#125; if (parent) &#123; parent.$emit.apply(parent, [eventName].concat(params)) &#125; &#125;, broadcast (componentName, eventName, params) &#123; broadcast.call(this, componentName, eventName, params) &#125; &#125;&#125; 2.使用组件App.vue123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178&lt;template&gt; &lt;div style=\"width: 1100px;margin: 40px auto\"&gt; &lt;div class=\"conditionbox\"&gt; &lt;div class=\"selectlist\"&gt; &lt;div class=\"title\"&gt;地区&lt;/div&gt; &lt;div class=\"select-box\"&gt; &lt;seltiplist v-model=\"loacl_select\"&gt; &lt;seltipoption v-for=\" item in local \" :label=\"item.label\" :value=\"item\" :key=\"item.id\"&gt;&lt;/seltipoption&gt; &lt;/seltiplist&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"selectlist\"&gt; &lt;div class=\"title\"&gt;薪资要求&lt;/div&gt; &lt;div class=\"select-box\"&gt; &lt;seltiplist v-model=\"salary_select\"&gt; &lt;seltipoption v-for=\" item in salary \" :label=\"item.label\" :value=\"item\" :key=\"item.id\"&gt;&lt;/seltipoption&gt; &lt;/seltiplist&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"selectlist\"&gt; &lt;div class=\"title\"&gt;福利待遇&lt;/div&gt; &lt;div class=\"select-box\"&gt; &lt;seltiplist :multiple=\"true\" v-model=\"treatment_select\"&gt; &lt;seltipoption v-for=\" item in treatment \" :label=\"item.label\" :value=\"item\" :key=\"item.id\"&gt;&lt;/seltipoption&gt; &lt;/seltiplist&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"selectlist\"&gt; &lt;div class=\"title\"&gt;已选条件&lt;/div&gt; &lt;div class=\"select-box\"&gt; &lt;span class=\"tip active\" v-if=\"loacl_select\"&gt;&#123;&#123;loacl_select.label&#125;&#125;&lt;/span&gt; &lt;span class=\"tip active\" v-if=\"salary_select\"&gt;&#123;&#123;salary_select.label&#125;&#125;&lt;/span&gt; &lt;span class=\"tip active\" v-for=\"item in treatment_select\" :key=\"item.id\"&gt;&#123;&#123;item.label&#125;&#125;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import seltiplist from './components/seltiplist.vue'import seltipoption from './components/seltipoption.vue'export default &#123; components: &#123; seltiplist, seltipoption &#125;, data () &#123; return &#123; loacl_select: '', treatment_select: [ &#123; id: 4, label: '项目奖金' &#125; ], salary_select: '', local: [ &#123; id: 1, label: '北京' &#125;, &#123; id: 2, label: '安徽' &#125;, &#123; id: 3, label: '上海' &#125;, &#123; id: 4, label: '广州' &#125;, &#123; id: 5, label: '青岛' &#125; ], treatment: [ &#123; id: 1, label: '五险一金' &#125;, &#123; id: 2, label: '交通补助' &#125;, &#123; id: 3, label: '带薪年假' &#125;, &#123; id: 4, label: '项目奖金' &#125; ], salary: [ &#123; id: 1, label: '4000以下' &#125;, &#123; id: 2, label: '4000-6000' &#125;, &#123; id: 3, label: '6000-8000' &#125;, &#123; id: 4, label: '8000以上' &#125; ] &#125; &#125;, methods: &#123;&#125;&#125;&lt;/script&gt;&lt;style&gt;body,html &#123; margin: 0; padding: 0; font-family: PingFang SC, Hiragino Sans GB, Microsoft Yahei, SimSun, Arial, Helvetica Neue, Helvetica; -webkit-font-smoothing: antialiased; line-height: 1.42857143; color: #666; font-size: 14px; background: #fdfbfb;&#125;.conditionbox &#123; width: 100%; margin-top: 10px; background: #fff; padding: 20px;&#125;.selectlist &#123; padding-top: 10px; padding-bottom: 10px;&#125;.selectlist .title &#123; display: inline-block; width: 98px; margin-left: 10px; font-weight: 700; font-size: 15px; margin-top: 3px;&#125;.selectlist .select-box &#123; width: 897px; position: relative; display: inline-block;&#125;span.tip &#123; padding: 3px 6px; cursor: pointer; border-radius: 3px; font-weight: 600; margin: 1px 2px; color: #465364;&#125;span.tip:hover &#123; color: #fff; background: #465364;&#125;span.tip.active &#123; color: #fff; background: #465364;&#125;&lt;/style&gt; 3.代码解释1.两个组件一个标签组件seltipoption，方便用v-for进行渲染 一个父组件seltiplist，管理v-model、接收seltipoption事件 2.实现自定义组件v-model数据双向绑定如果要让组件的v-model生效，则这个组件它必须： 接收一个value属性。 在有新的value时触发input事件，直接赋值给this.value是无效的，无法触发更新。 当为多选项时，更新seltiplist的value数组即可，但是当为单选项时，需要使用this.$emit(&#39;input&#39;, val)来触发更新 3.父子组件通讯当seltipoption.vue响应click事件后，通过this.dispatch(&#39;seltiplist&#39;, &#39;handleOptionClick&#39;, this.value)触发父组件seltiplist.vue的监听this.$on(&#39;handleOptionSelect&#39;)实现组件间的通讯。 4.seltipoption的选择状态判断 当为单选时，判断seltipoption的value是都等于seltiplist的value 当为多选时，seltipoption的value存在seltiplist的value数组中 5.为了判断两个value值是否相等此处引入工具库underscore.min.js","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"},{"name":"Vue","slug":"Vue","permalink":"http://www.lolimay.cn/tags/Vue/"}]},{"title":"Shirt+Enter与Enter按键功能互换","slug":"Shirt-Enter与Enter按键功能互换","date":"2018-04-16T17:31:25.000Z","updated":"2018-06-19T18:47:49.645Z","comments":true,"path":"2018/04/17/Shirt-Enter与Enter按键功能互换/","link":"","permalink":"http://www.lolimay.cn/2018/04/17/Shirt-Enter与Enter按键功能互换/","excerpt":"","text":"12345#IfWinActive, ahk_class Chrome_WidgetWin_1Enter::+Enterreturn$+Enter:: Send &#123;Enter&#125;return","categories":[],"tags":[{"name":"AutoHotKey","slug":"AutoHotKey","permalink":"http://www.lolimay.cn/tags/AutoHotKey/"}]},{"title":"在Vue项目中引入element组件库","slug":"在Vue项目中引入element组件库","date":"2018-04-14T18:05:37.000Z","updated":"2018-06-19T18:47:58.971Z","comments":true,"path":"2018/04/15/在Vue项目中引入element组件库/","link":"","permalink":"http://www.lolimay.cn/2018/04/15/在Vue项目中引入element组件库/","excerpt":"","text":"安装1npm i element-ui -S","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"},{"name":"Vue","slug":"Vue","permalink":"http://www.lolimay.cn/tags/Vue/"}]},{"title":"安装vux组件库","slug":"安装vux组件库","date":"2018-04-06T03:09:26.000Z","updated":"2018-07-27T16:20:32.900Z","comments":true,"path":"2018/04/06/安装vux组件库/","link":"","permalink":"http://www.lolimay.cn/2018/04/06/安装vux组件库/","excerpt":"vux是一款优秀的移动端UI组件库，强烈推荐使用，下面分享一下自己的踩坑记录~","text":"vux是一款优秀的移动端UI组件库，强烈推荐使用，下面分享一下自己的踩坑记录~ 1.安装必要的包123npm i vux --savenpm i vux-loader --save-devnpm i less less-loader--save-dev 2.配置build/webpack.base.conf.jsStep1 将原先的module.exports赋值给变量originalConfig 示例：var originalConfig = {... Step2 在最下方粘贴以下代码 123456const vuxLoader = require('vux-loader')const webpackConfig = originalConfig // 原来的 module.exports 代码赋值给变量 webpackConfigmodule.exports = vuxLoader.merge(webpackConfig, &#123; plugins: ['vux-ui']&#125;) 3.引用组件Step1 在src/main.js入口js文件中,引用需要使用的组件 如引用Tabbar： 1234import &#123; Tabbar, TabbarItem &#125; from 'vux' //按需引入组件//全局注册该组件Vue.component('tabbar', Tabbar)Vue.component('tabbar-item', TabbarItem) 点击了解：vue组件 Step2 在页面入口组件中App.vue中引用该组件 12345678&lt;tabbar&gt; &lt;tabbar-item&gt; &lt;span slot=\"label\"&gt;自习&lt;/span&gt; &lt;/tabbar-item&gt; &lt;tabbar-item show-dot&gt; &lt;span slot=\"label\"&gt;图表&lt;/span&gt; &lt;/tabbar-item&gt;&lt;/tabbar&gt; 至此vux组件已经安装成功了，截图如下： 4.优化1.优化样式在页面入口组件App.vue结尾加上以下代码： 123&lt;style lang=\"less\"&gt;@import '~vux/src/styles/reset.less';&lt;/style&gt; 2.配置页面视口将页面入口文件index.html中的 1&lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\"&gt; 替换为 1&lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1,user-scalable=0\"&gt; 3. 消除移动端点击延迟在页面入口JS文件build/main.js中添加以下代码： 12const FastClick = require('fastclick')FastClick.attach(document.body)","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"},{"name":"Vue","slug":"Vue","permalink":"http://www.lolimay.cn/tags/Vue/"}]},{"title":"vue从入门到放弃","slug":"vue从入门到放弃","date":"2018-04-05T08:06:03.000Z","updated":"2018-07-27T16:20:32.812Z","comments":true,"path":"2018/04/05/vue从入门到放弃/","link":"","permalink":"http://www.lolimay.cn/2018/04/05/vue从入门到放弃/","excerpt":"哈哈，虽然标题是这样起的，但是前端工程化的好处可是大大的呀，方便项目的前期构建同时也有利于后期维护，所以还是尽早入坑吧~","text":"哈哈，虽然标题是这样起的，但是前端工程化的好处可是大大的呀，方便项目的前期构建同时也有利于后期维护，所以还是尽早入坑吧~ 1.使用vue-cli脚手架创建一个vue项目vue init webpack &lt;项目名(可选)&gt; 2.vue-cli脚手架目录结构分析 除了进行一些配置,一情况下我们和`src`目录打交道最多 3.vue单文件组件 一个`.vue`文件就是一个**vue单文件组件**,它由（HTML+JS+CSS）组成 4.安装stylus支持Step1 npm i stylus stylus-loader --save-dev #npm安装stylus-loader Step2 在.vue组件中样式标记加上lang=&#39;stylus&#39; 示例： 123456&lt;style scoped lang='stylus'&gt;fonts = Microsoft Yaheih1, h2 &#123; font 30px/1 fonts&#125;&lt;/style&gt; 5.编写自己的组件并使用Route渲染Step1 在src/component目录下新建一个MyCom.vue组件文件并编写组件内容 Step2 写好组件内容后，修改route索引文件router/index.js import组件 1import MyCom from '@/components/MyCom' 将组件信息添加到路由列表中 示例： 123456789101112routes: [ // &#123; // path: '/', // name: 'HelloWorld', // component: HelloWorld // &#125;, &#123; path:'/', name:'MyCom', component:MyCom &#125;] 6.踩过的一些坑1.npm run dev后，局域网内其他设备无法调试这个要慌，问题很大!尤其是你在进行移动Web开发的时候，还是真机调试比较靠谱。 解决方案： 修改config/index.js，将host:&#39;localhost&#39;改成host:&#39;0.0.0.0&#39;","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"},{"name":"Vue","slug":"Vue","permalink":"http://www.lolimay.cn/tags/Vue/"}]},{"title":"查看Linux系统版本信息","slug":"查看Linux系统版本信息","date":"2018-04-05T06:18:36.000Z","updated":"2018-06-19T18:48:42.534Z","comments":true,"path":"2018/04/05/查看Linux系统版本信息/","link":"","permalink":"http://www.lolimay.cn/2018/04/05/查看Linux系统版本信息/","excerpt":"","text":"1lsb_release -a","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.lolimay.cn/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.lolimay.cn/tags/Linux/"}]},{"title":"DSRunTime.h","slug":"DSRunTime.h","date":"2018-04-01T05:33:48.000Z","updated":"2018-06-19T18:51:01.714Z","comments":true,"path":"2018/04/01/DSRunTime.h/","link":"","permalink":"http://www.lolimay.cn/2018/04/01/DSRunTime.h/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233/** * DataStructure Runtime * Author:LoliMay * Date:20180326 */#include &lt;stdio.h&gt;#include &lt;time.h&gt;#include &lt;stdlib.h&gt;#define MAXSIZE 100#define exit return#define null 0/** * enum Status * @value OK * @value Error */typedef enum Status &#123; OK=0,ERROR=-1,OVERFLOW=-2&#125;;/** * struct ElemType */typedef struct ElemType &#123; int value;&#125;;/******************************************************************//********** SqlList 's definition and its operations **************//******************************************************************//** * struct SqList */typedef struct SqList &#123; ElemType *elem; //the base address of the storage space int length; //the item number of the current polynomial&#125;;/** * InitSqList */Status InitSqList (SqList &amp;L) &#123; // innitialize a void SqList L.elem = new ElemType[MAXSIZE]; if(!L.elem) exit(OVERFLOW); L.length=0; return OK; &#125;/** * SqListGetElem */Status SqListGetElem(SqList L,int i,ElemType &amp;e) &#123; if(i&lt;1||i&gt;L.length) return ERROR; e=L.elem[i-1]; return OK;&#125;/** * SqListLocateElem */int SqListLocateElem(SqList L,ElemType e) &#123; for(int i=0;i&lt;L.length; i++) if(L.elem[i].value==e.value) return i+1; return 0;&#125;/** * SqListInsert */Status SqListInsert(SqList &amp;L,int i,ElemType e)&#123; if((i&lt;1)||(i&gt;L.length+1)) return ERROR; if(L.length==MAXSIZE) return ERROR; for(int j=L.length-1;j&gt;=i-1;j--) L.elem[j+1]=L.elem[j]; L.elem[i-1]=e; ++L.length; return OK;&#125;/** * ListDelete */Status SqListDelete(SqList &amp;L,int i) &#123; if((i&lt;1)||(i&gt;L.length)) return ERROR; for(int j=i;j&lt;=L.length-1;j++) L.elem[j-1]=L.elem[j]; --L.length; return OK;&#125;/** * genSqList * generate a SqList randomly with specific length, so that you can test it. */void genSqList(SqList &amp;L,int number) &#123; for(int i=1;i&lt;=number;i++) &#123; ElemType e; e.value = rand(); // generate random numbers. SqListInsert(L,i,e); &#125;&#125;/** * printSqList * print the entire SqList so that you can know about this SqList's contents clearly. */ void printSqList(SqList &amp;L) &#123; ElemType e; for(int i=1;i&lt;=L.length;i++)&#123; SqListGetElem(L,i,e); printf(\"%d\\t\",e.value); &#125;&#125;/******************************************************************//********** LinkList 's definition and its operations **************//******************************************************************//** * struct LNode */typedef struct LNode &#123; ElemType data; struct LNode *next;&#125;LNode, *LinkList; // the pointer LinkList is point at the struct LNode/** * InitLinkList */Status InitLinkList(LinkList &amp;L) &#123; L = new LNode; L-&gt;next=null; return OK;&#125;/** * LinkListGetElem */Status LinkListGetElem(LinkList L,int i,ElemType &amp;e) &#123; LinkList p; p=L-&gt;next; int j=1; while(p&amp;&amp;j&lt;i)&#123; p=p-&gt;next; ++j; &#125; if(!p||j&gt;i) return ERROR; e=p-&gt;data; return OK;&#125;/** * LinkListLocateElem */LNode *LocateElem(LinkList L,ElemType e) &#123; LNode *p; p=L-&gt;next; while(p&amp;&amp;p-&gt;data.value!=e.value) p=p-&gt;next; return p;&#125;/** * LinkListInsert */Status LinkListInsert(LinkList &amp;L,int i,ElemType e) &#123; LinkList p=L; int j=0; while(p&amp;&amp;(j&lt;i-1))&#123; p=p-&gt;next; ++j; &#125; if(!p||j&gt;i-1) return ERROR; LinkList s = new LNode; s-&gt;data=e; s-&gt;next=p-&gt;next; p-&gt;next=s; return OK;&#125;/** * LinkListDelete */Status LinkListDelete(LinkList &amp;L,int i) &#123; LNode *p; int j=0; while((p-&gt;next)&amp;&amp;(j&lt;i-1)) &#123; p=p-&gt;next; ++j; &#125; if(!(p-&gt;next)||(j&gt;i-1)) return ERROR; LNode *q = p-&gt;next; p-&gt;next=q-&gt;next; delete q; return OK; &#125;/** * genLinkList * generate a SqList randomly with specific length, so that you can test it. */void genLinkList(LinkList &amp;L,int number) &#123; for(int i=1;i&lt;=number;i++) &#123; ElemType e; e.value = rand(); // generate random numbers. LinkListInsert(L,i,e); &#125;&#125;/** * printLinkList * print the entire SqList so that you can know about this SqList's contents clearly. */ void printLinkList(LinkList &amp;L) &#123; ElemType e; LinkList p = L; int i=1; LinkListGetElem(L,1,e); printf(\"%d\\t\",e.value); while(1)&#123; if(LinkListGetElem(L,i+1,e)==OK)&#123; LinkListGetElem(L,i+1,e); printf(\"%d\\t\",e.value); &#125;else &#123; break; &#125; i++; &#125;&#125;","categories":[],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://www.lolimay.cn/tags/数据结构/"}]},{"title":"Chrome拓展：毫秒级自动刷新","slug":"Chrome拓展：毫秒级自动刷新","date":"2018-03-22T05:04:23.000Z","updated":"2018-07-27T16:20:32.768Z","comments":true,"path":"2018/03/22/Chrome拓展：毫秒级自动刷新/","link":"","permalink":"http://www.lolimay.cn/2018/03/22/Chrome拓展：毫秒级自动刷新/","excerpt":"在写HTMLCSS的时候，就在想如果自己写的页面支持实时预览就好了。如今这个想法中终于可以通过VS Code+Chrome自动刷新拓展得以实现。","text":"在写HTMLCSS的时候，就在想如果自己写的页面支持实时预览就好了。如今这个想法中终于可以通过VS Code+Chrome自动刷新拓展得以实现。 1. 配置VS Code自动刷新在VS Code中按下快捷键F5，再点击更多设置进入用户设置 在用户设置文件中添加红框中两个选项即可。 2. 使用Chrome自动刷新插件在网上苦苦搜寻，都只能找到秒级自动刷新，也就是最小刷新间隔是1秒，这样在实际编写代码的时候，还是会有一点延迟。于是，我在某一款自动刷新的插件的基础上做了一点修改（UI美化+把精度改成毫秒级）。这样就可以满足我的需求啦~ 插件界面截图 这里附上我的定制版插件下载链接：毫秒级自动刷新.crx 注： 实测将刷新间隔设为500毫秒，我的两千多的渣本的风扇会像疯了一样转起来~ （手动无奈…） 所以，刷新间隔时间要量你的电脑的力而行… Ps. 如果你恰巧又有双屏，那Web开发的体验简直不能太好，哈哈! Pss. 效果演示 ======== 2018年3月24日更新 ======== 后来觉得这个插件还是不够便捷，于是又重新制作了一个Chrome插件，图标更美观，操作更简单。 现在需要点击一下图标就能自动开启刷新，再点击一下就能自动关闭刷新。缺点是牺牲了可定制型，当然如果你动手能力强也是可以在我的插件的基础上修改源码的。 附上下载地址：自动刷新.crx","categories":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.lolimay.cn/categories/Javascript/"}],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.lolimay.cn/tags/Javascript/"}]},{"title":"GET与POST的区别","slug":"GET与POST的区别","date":"2018-03-21T10:08:29.000Z","updated":"2018-06-19T18:52:57.571Z","comments":true,"path":"2018/03/21/GET与POST的区别/","link":"","permalink":"http://www.lolimay.cn/2018/03/21/GET与POST的区别/","excerpt":"","text":"1. 参数 GET传递的参数只能带URL后面，文本格式QueryString，各浏览器一般有长度限制，一般认为是2083，如果有中文字符则更短。提交到服务端的数据量小。 POST可以传递application/x-www-form-urlencoded的类似QueryString、multipart/form-data的二进制报文形式（支持文件信息嵌入报文传输）、纯文本或二进制的body参数。提交到服务器端的数据量大。 2. 缓存 GET默认可以复用前面的请求数据作为缓存结果返回，此时以完整的URL作为缓存数据的KEY。 有时候为了强制每次GET请求都是新数据，我们可以在URL后面加上一个随机参数、时间戳或版本号。比如，在jQuery.ajax()方法中，如果把cache=false，则会在GET请求参数中附加_={timesatmp}来禁用缓存。 POST则一般不会被缓存因素影响。 3. 安全性 默认对于nginx的access log，会自动记录GET和POST的完整URL，包括其中带的参数。 而对于POST来说，请求的报文却不会被记录，这对于敏感数据来说POST更安全一些。 注：这两者都是明文传送，只是GET的URL会被记录在浏览器和Web服务器的日志中，而POST发完就发完了，不存在什么历史和日志什么的。但是如果被抓了包，GET和POST都没什么卵用，HTTPS该用还是得用。 4. 用途 GET用于从服务端获取数据，包括静态资源的加载、动态数据的展示等。 POST用于向数据提交数据，比如新增、删除、修改数据等。 总的来说，可以重复的交互，比如取个数据、跳个页面用GET，不可以重复的操作，比如创建一个条目、修改一条记录用POST。","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://www.lolimay.cn/tags/前端/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.lolimay.cn/tags/JavaScript/"}]},{"title":"CSS小知识点","slug":"CSS小知识点","date":"2018-03-18T04:06:00.000Z","updated":"2018-07-27T16:20:32.734Z","comments":true,"path":"2018/03/18/CSS小知识点/","link":"","permalink":"http://www.lolimay.cn/2018/03/18/CSS小知识点/","excerpt":"","text":"相邻兄弟选择器（+）和兄弟选择器（~）只能选择该元素后面的元素，不能选择其前面的元素。 斜向线性渐变 1background: repeating-linear-gradient(-45deg,rgb(0, 0, 0) 25%, #000 50%, red 0,red 75%); 效果图：","categories":[{"name":"HTMLCSS","slug":"HTMLCSS","permalink":"http://www.lolimay.cn/categories/HTMLCSS/"}],"tags":[{"name":"HTMLCSS","slug":"HTMLCSS","permalink":"http://www.lolimay.cn/tags/HTMLCSS/"}]},{"title":"更改子元素的margin，但是父元素和子元素整体相对body偏移","slug":"更改子元素的margin，但是父元素和子元素整体相对body偏移","date":"2018-03-18T03:06:43.000Z","updated":"2018-03-18T03:14:56.383Z","comments":true,"path":"2018/03/18/更改子元素的margin，但是父元素和子元素整体相对body偏移/","link":"","permalink":"http://www.lolimay.cn/2018/03/18/更改子元素的margin，但是父元素和子元素整体相对body偏移/","excerpt":"如题，现附上解答了我的疑问的原文地址。 第一位答主说，原因是父元素没有边界 我经过实际验证，他说的是对的，特地记下以备忘!","text":"如题，现附上解答了我的疑问的原文地址。 第一位答主说，原因是父元素没有边界 我经过实际验证，他说的是对的，特地记下以备忘! 顺便记下了，其它答主的解决方案： 1、修改父元素的高度，增加padding-top样式模拟 2、为父元素添加overflow：hidden；样式即可 3、为父元素或者子元素声明浮动 4、为父元素添加border 5、为父元素或者子元素声明绝对定位 鉴于，我现在会的知识过于零散，有的还看不懂，暂时记下，以便以后查看~","categories":[{"name":"HTMLCSS","slug":"HTMLCSS","permalink":"http://www.lolimay.cn/categories/HTMLCSS/"}],"tags":[{"name":"HTMLCSS","slug":"HTMLCSS","permalink":"http://www.lolimay.cn/tags/HTMLCSS/"}]},{"title":"HTML实战：导航栏二级菜单","slug":"HTML实战：导航栏二级菜单","date":"2018-03-17T07:08:52.000Z","updated":"2018-07-27T16:20:32.700Z","comments":true,"path":"2018/03/17/HTML实战：导航栏二级菜单/","link":"","permalink":"http://www.lolimay.cn/2018/03/17/HTML实战：导航栏二级菜单/","excerpt":"1. 框架结构1div#menu&gt;ul&gt;(li&gt;a.drop+div.dropdown_1column&gt;div.dropdown_1column-inner&gt;ul&gt;li*4)*4","text":"1. 框架结构1div#menu&gt;ul&gt;(li&gt;a.drop+div.dropdown_1column&gt;div.dropdown_1column-inner&gt;ul&gt;li*4)*4 2. 小结1.关键代码Step3 将一级菜单的position设置为relative 12345678#menu&gt;ul&gt;li &#123; width: 160px; float: left; text-align: center; line-height: 45px; padding: 0 20px; position: relative; &#125; 如果不这样做，它的子元素.dropdown_1column 在positon:absolute状态下将会默认相对body元素定位。 Step2 #menu .dropdown_1column的position设置为absolute并将left设置为-999em实现隐藏二级菜单的效果 示例代码： 12345#menu .dropdown_1column &#123; position: absolute; left: -999em; width: 110px; &#125; Step3 将一级菜单的:hover与.dropdown_1column绑定，实现将鼠标移至一级菜单时显示二级菜单的效果 示例代码： 12345 #menu ul&gt;li:hover .dropdown_1column &#123; left:45px; top:45px; padding-top:5px;&#125; 2. 实现面板的凹陷效果 其实，原理是利用人类的错觉，在li元素的下方有一个比背景颜色深一点的边框，在li元素的上方有一个背景颜色浅一点的边框，两个边框在一起最终造成了凹陷的效果。 核心代码： 注意事项：上下边框的颜色要和背景颜色接近，否则违和感会很强。 3. 效果演示 4. 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt; &lt;title&gt;导航栏二级菜单制作&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;style&gt; * &#123; font-family: Microsoft Yahei; &#125; li &#123; list-style: none; &#125; #menu &#123; width: 900px; height: 45px; margin: 35px auto 0; background: rgba(232, 231, 227,1); &#125; #menu a &#123; text-decoration: none; color:rgba(117, 117, 117,1); &#125; #menu&gt;ul&gt;li &#123; width: 160px; float: left; text-align: center; line-height: 45px; padding: 0 20px; position: relative; &#125; #menu&gt;ul&gt;li:hover &#123; background: rgba(63, 63, 63,1); &#125; #menu&gt;ul&gt;li:hover a &#123; color:white; &#125; #menu ul&gt;li:hover .dropdown_1column &#123; left:45px; top:45px; padding-top:5px; &#125; #menu .dropdown_1column &#123; position: absolute; left: -999em; width: 110px; &#125; #menu .dropdown_1column-inner&#123; background: rgba(225, 226, 230,1); border-radius: 5px; &#125; #menu ul li ul &#123; padding: 0; &#125; #menu ul li ul li &#123; display: block; width: 100px; margin: 0 auto; text-align: center; border-bottom: 1px solid rgba(121, 123, 124, 0.178); border-top: 1px solid rgb(242, 243, 247); &#125; #menu ul li ul li:hover &#123; color: rgba(233, 104, 107,1); cursor: pointer; &#125; &lt;/style&gt; &lt;div id=\"menu\"&gt; &lt;ul&gt; &lt;li&gt; &lt;a class=\"drop\" href=\"\"&gt;最火下载站&lt;/a&gt; &lt;div class=\"dropdown_1column\"&gt; &lt;div class=\"dropdown_1column-inner\"&gt; &lt;ul&gt; &lt;li&gt;网站建设&lt;/li&gt; &lt;li&gt;网站制作&lt;/li&gt; &lt;li&gt;电子商务&lt;/li&gt; &lt;li&gt;导航代码&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=\"drop\" href=\"\"&gt;网站推荐&lt;/a&gt; &lt;div class=\"dropdown_1column\"&gt; &lt;div class=\"dropdown_1column-inner\"&gt; &lt;ul&gt; &lt;li&gt;网站推广&lt;/li&gt; &lt;li&gt;网站优化&lt;/li&gt; &lt;li&gt;网站制作&lt;/li&gt; &lt;li&gt;咨询建议&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=\"drop\" href=\"\"&gt;联系作者&lt;/a&gt; &lt;div class=\"dropdown_1column\"&gt; &lt;div class=\"dropdown_1column-inner\"&gt; &lt;ul&gt; &lt;li&gt;网络营销&lt;/li&gt; &lt;li&gt;关于我们&lt;/li&gt; &lt;li&gt;联系我们&lt;/li&gt; &lt;li&gt;反馈建议&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;a class=\"drop\" href=\"\"&gt;电影推荐&lt;/a&gt; &lt;div class=\"dropdown_1column\"&gt; &lt;div class=\"dropdown_1column-inner\"&gt; &lt;ul&gt; &lt;li&gt;你的名字&lt;/li&gt; &lt;li&gt;最新大片&lt;/li&gt; &lt;li&gt;音乐推荐&lt;/li&gt; &lt;li&gt;最新文章&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"HTML+CSS","slug":"HTML-CSS","permalink":"http://www.lolimay.cn/categories/HTML-CSS/"}],"tags":[{"name":"HTML+CSS","slug":"HTML-CSS","permalink":"http://www.lolimay.cn/tags/HTML-CSS/"}]},{"title":"在右键菜单中添加.html文件","slug":"在右键菜单中添加-html文件","date":"2018-03-17T05:55:42.000Z","updated":"2018-07-27T16:20:32.734Z","comments":true,"path":"2018/03/17/在右键菜单中添加-html文件/","link":"","permalink":"http://www.lolimay.cn/2018/03/17/在右键菜单中添加-html文件/","excerpt":"Step1 修改注册表这里推荐使用右键菜单管理工具修改，手动修改比较繁琐。 如RightMenuMar（点击下载） 打开工具后，点击新建，再在右侧面板右击选择增加拓展项","text":"Step1 修改注册表这里推荐使用右键菜单管理工具修改，手动修改比较繁琐。 如RightMenuMar（点击下载） 打开工具后，点击新建，再在右侧面板右击选择增加拓展项 在第一个框中输入.html 后确定即可 这时候多刷新几次桌面，在右击新建发现已经出现了.html文件选项 Step2 添加.html文件的模板这时候新建的html文件默认是空白的，我们可以给他新建一个模板 打开资源管理器，到路径C:\\Windows\\ShellNew下，新建一个新建 HTML 文档.html文件 打开新建 HTML 文档.html，粘贴以下内容后，保存：（注意在系统路径下记事本是无法直接保存文件的，可以先保存至桌面，再以管理员权限拖至C:\\Windows\\ShellNew目录下、而使用具有管理员权限的VS Code编辑文件则不存在这个问题） 123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;/body&gt;&lt;/html&gt; 这时候我们打开刚刚新建的新建 HTML 文档.html文件，会发现初始内容已经不再是空的，而是我们的模板内容啦~","categories":[],"tags":[]},{"title":"在右键菜单中添加自定义快捷方式","slug":"在右键菜单中添加自定义快捷方式","date":"2018-03-16T16:47:21.000Z","updated":"2018-03-17T03:03:58.867Z","comments":true,"path":"2018/03/17/在右键菜单中添加自定义快捷方式/","link":"","permalink":"http://www.lolimay.cn/2018/03/17/在右键菜单中添加自定义快捷方式/","excerpt":"因为VS Code在新安装的时候，可以勾选添加右键菜单快捷方式，后来重装VS Code后忘记勾选这个选项，结果在右键菜单中就没有Open with Code了，很是不方便，所以在网上找到了相关教程，手动添加了这个快捷方式。","text":"因为VS Code在新安装的时候，可以勾选添加右键菜单快捷方式，后来重装VS Code后忘记勾选这个选项，结果在右键菜单中就没有Open with Code了，很是不方便，所以在网上找到了相关教程，手动添加了这个快捷方式。 注册表内容如下： 1234567891011121314151617Windows Registry Editor Version 5.00; 将 在VS Code中打开 添加到任意类型文件的右键菜单中[HKEY_CLASSES_ROOT\\*\\shell\\VisualCode]@=&quot;在VS Code中打开&quot;[HKEY_CLASSES_ROOT\\*\\shell\\VisualCode\\Command]@=&quot;C:\\\\Program Files\\\\Microsoft VS Code\\\\Code.exe \\&quot;%1\\&quot;&quot;; 将 在VS Code中打开 添加到文件夹的右键菜单中[HKEY_CLASSES_ROOT\\Directory\\shell\\VisualCode]@=&quot;在VS Code中打开&quot;[HKEY_CLASSES_ROOT\\Directory\\shell\\VisualCode\\Command]@=&quot;C:\\\\Program Files\\\\Microsoft VS Code\\\\Code.exe \\&quot;%1\\&quot;&quot;; 注意将VS Code的启动路径替换成你自己VS Code的安装路径 小结：[HKEY_CLASSES_ROOT\\*\\shell 是任意文件右键菜单对应的注册表键 [HKEY_CLASSES_ROOT\\directory\\shell 是文件夹右键菜单对应的注册表键","categories":[{"name":"Windows10","slug":"Windows10","permalink":"http://www.lolimay.cn/categories/Windows10/"}],"tags":[{"name":"Windows10","slug":"Windows10","permalink":"http://www.lolimay.cn/tags/Windows10/"}]},{"title":"JS操作元素样式","slug":"JS操作元素样式","date":"2018-03-16T07:21:11.000Z","updated":"2018-03-16T08:24:45.024Z","comments":true,"path":"2018/03/16/JS操作元素样式/","link":"","permalink":"http://www.lolimay.cn/2018/03/16/JS操作元素样式/","excerpt":"在HTML中定义元素的样式有3种： 使用style特性定义针对特定元素的样式 使用&#60;style&#62;标签定义嵌入式标签 通过&#60;link&#62;标签引用外部样式表","text":"在HTML中定义元素的样式有3种： 使用style特性定义针对特定元素的样式 使用&#60;style&#62;标签定义嵌入式标签 通过&#60;link&#62;标签引用外部样式表 DOM Level 2 Style根据这3种应用样式的机制提供了一套API： 1. 访问和修改元素的style特性任何支持style特性的HTML元素在Javascript中都有一个对应的style属性，在style特性中指定的任何CSS属性都将表现为这个style对象的相应属性，但需要注意的是对于使用短划线的CSS属性名会自动转换为驼峰大小写形式、float由于是Javascript中的保留字，不能做属性名，对应的Javascript属性为cssFloat（IE支持的是styleFloat）。 常见的CSS属性及其在style对象中对应的属性名： CSS属性 Javascript属性 background-image style.backgroundImage color style.color display style.display font-family style.fontFamily float cssFloat或styleFloat（IE） 2. 操作样式表应用于文档的所有样式表是通过document.styleSheets集合来表示的，它既包括&#60;style&#62;标签定义的嵌入式样式表也包括通过&#60;link&#62;标签引用的外部样式表。 styleSheets对象提供了一些属性和方法，供开发者访问和修改样式表的样式规则，常见的有： href：如果当前样式表是通过&#60;link&#62;标签引用的，则是样式表的URL，否则为null。通过这个属性我们可以手动筛选出外部样式表和嵌入式样式表。 cssRules：样式表中包含的样式规则的集合。IE不支持这个属性，但有一个类似的rules属性。 deleteRule(index)：删除cssRules集合中集合中指定位置的规则。IE不支持这个方法，但有一个类似的removeRule()方法。 insertRule(rule,index)：向cssRules集合中指定的位置插入rule字符串。IE不支持这个方法，但有一个类似的addRule()方法。","categories":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.lolimay.cn/categories/Javascript/"}],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.lolimay.cn/tags/Javascript/"}]},{"title":"English Manuscript","slug":"English Manuscript","date":"2018-03-10T07:19:02.000Z","updated":"2018-03-16T12:10:20.049Z","comments":true,"path":"2018/03/10/English Manuscript/","link":"","permalink":"http://www.lolimay.cn/2018/03/10/English Manuscript/","excerpt":"PROLOGUELoliMay：Good morning, everyone! Welcome to BREAKING NEWS ，I’m LoliMay. Anakin： Hello, I’m Anakin. Today..we will look through some great news.","text":"PROLOGUELoliMay：Good morning, everyone! Welcome to BREAKING NEWS ，I’m LoliMay. Anakin： Hello, I’m Anakin. Today..we will look through some great news. NEWS1 Husband cancelled wife’s orders, wife decided to divoceLoliMay：As is known to us all，Alibaba holds the Double 11th Shopping Day every year. {1. show Double 11th Shopping Day photo} And It’s also the biggest shopping day all over the world. More and more Chinese people will chop their hands on that day . {2. show chop hands photo} Well, Anakin…do you know what’s the number of Taobao and Tmall’s sales on the Double 11th Shopping Day last year? Anakin：Well, Let me think…is 120.7 billion yuan ? LoliMay：No, that’s number is the year beore last. Last year’s data is 168.2 billion yuan. {3. show 168.2 billion photo} Anakin：Wow, this really a huge number. Very surprising! LoliMay：Yeah, so incredibale.And…the following news is about the Double 11th Shopping day. Anakin：uh-huh, What happened ? LoliMay： Well, A man cancelled all his wife’s shopping orders the next morning of the shopping Day. Anakin：Let’s see the video… {4. play news1 video} {5. play news1 remark page} Anakin：Oh, a divorce tragedy caused by cancellation of Taobao orders. LoliMay：Maybe the husband’s heart is desperate now. Anakin：So…This news told us that never try to cancel any shopping orders of your woman, or you may become a bachelor again. LoliMay：Yeah, I think so. NEWS2 Careless father dropped the children and drove away aloneAnakin：LoliMay，have you ever heard the story Mr. Wang living next door?LoliMay：Yeah，I know that. That means you are not born by your father but the Uncle Lao Wang. Anakin：Well，three 3 kids in the next news may think as you said. LoliMay：OK，let’s see… {6. play news2 video} {7. play news2 remark page} Anakin：That’s really a careless father! I think these three kids will remember this thing forever. LoliMay： Maybe. But before this，I prefer to wonder what will happen if three kids mother see her hushand go back home without three kids. Anakin：Well，it’s another tragedy. NEWS3 The habitual thief was arrested and hurried to the police station to have a mealLoliMay：Anakin，have you ever seen a thief? Anakin：No，I haven’t . But my stuff have ever been stolen and I did’t know who did this. LoliMay：Well，the final news is about a habitual thief and he has been accustomed to putting into police station. Surprisingly，he has fallen in love with being arrested because he can enjoy police station’s free meal in this way. Anakin：Oh，That’s really a funny person. {8. play news3 video} {9. play news3 remark page} Anakin：Oh my god! In order to go to the police station to have a meal is really enough for this man to fight. Lolimay：So…Anakin, what do you think of this man? Anakin：To be frank，I can’t understand his behavior. Evidently，he is not disabled and I’m sure that he could find a job to feed himself. But he’s not. {10. play end page} LoliMay：Maybe. Different people have different ideas. Anakin：OK，Our program is coming to an end. Thanks a lot for CCTV，MTV，Channel V，Our friends，Our roommates，Our families’ support. LoliMay：Also，Thanks Mr. Dong a lot who give us this chance to show and all the classmates for your involved watching ! LoliMay、Anakin：Goodbye! Attachment1：DemoVideo if(detectmob()){ var demoVideo=document.getElementById(\"821d3c5f34da517fd497dced49ca9ada_8\"); demoVideo.style.display=\"none\"; demoVideo.insertAdjacentHTML(\"afterend\",\"请使用PC浏览器查看此视频\"); } Attachment2：EnglishPPT.pptx DownloadAttachment3：Manuscript.pdf Download","categories":[{"name":"Life","slug":"Life","permalink":"http://www.lolimay.cn/categories/Life/"}],"tags":[{"name":"Life","slug":"Life","permalink":"http://www.lolimay.cn/tags/Life/"}]},{"title":"重建efi引导分区","slug":"重建efi引导分区","date":"2018-03-09T15:14:50.000Z","updated":"2018-07-27T16:20:32.679Z","comments":true,"path":"2018/03/09/重建efi引导分区/","link":"","permalink":"http://www.lolimay.cn/2018/03/09/重建efi引导分区/","excerpt":"刚刚手贱把一个不知名的800多M的分区给删除了，结果笔记本不能以UEFI模式启动Windows，只能以Legacy模式启动。开机时间一下子从几秒变成十几秒，这对于严重的强迫症患者来说怎么能忍啊，于是我很快找到了解决方案…","text":"刚刚手贱把一个不知名的800多M的分区给删除了，结果笔记本不能以UEFI模式启动Windows，只能以Legacy模式启动。开机时间一下子从几秒变成十几秒，这对于严重的强迫症患者来说怎么能忍啊，于是我很快找到了解决方案… 1. win+x打开磁盘管理，压缩一个分区出来也就是在你的系统盘中所在的那块的磁盘上压缩一些空间出来，新建一个新的分区A: ======================== 分割线 ================ 后来实测efi分区只占49.6M 2. 以管理员身份运行命令行工具由于我刚刚新建的分区是A:，则我们可以直接输入bcdboot c:\\windows /s Q: /f uefi /l zh-cn# 注意中间那个A:要换成你自己的分区号(启动分区号一般为A:或B:) 如果提示 引导创建成功 那么至此，重建efi引导分区我们就算完成了! 我重启进BIOS改成UEFI启动也回到了熟悉的启动界面~ But… 对于强迫症来说，好像还是有点不完美 给出隐藏的方法 win+R-运行gpedit.msc(打开组策略管理器)-用户配置-管理模板-在windows组件中找到文件资源管理器-找到隐藏我的电脑中的这些指定的驱动器-选择已启用-选择下列组合中的一个：选择仅限制驱动器A和B 这样，我们在资源管理器中就看不到启动分区啦~","categories":[{"name":"重装系统","slug":"重装系统","permalink":"http://www.lolimay.cn/categories/重装系统/"}],"tags":[{"name":"重装系统","slug":"重装系统","permalink":"http://www.lolimay.cn/tags/重装系统/"}]},{"title":"LoliMay工具箱使用手册","slug":"LoliMay工具箱使用手册","date":"2018-03-09T08:42:35.000Z","updated":"2018-07-27T16:20:32.784Z","comments":true,"path":"2018/03/09/LoliMay工具箱使用手册/","link":"","permalink":"http://www.lolimay.cn/2018/03/09/LoliMay工具箱使用手册/","excerpt":"使用前须知1：本工具适用于和作者一样具有严重的强迫症倾向的患者，同时对Windows资源管理器中的用户文件夹、左侧Onedrive文件夹、以及快捷方式小图标深恶痛绝，势不两立 (我是不是在滥用成语…(逃 使用前须知2：本工具使用AutoHotKey脚本开发，并不是使用WPF开发的，这意味着它的界面会很丑，这也是没办法的事(我尽力了…/笑哭)","text":"使用前须知1：本工具适用于和作者一样具有严重的强迫症倾向的患者，同时对Windows资源管理器中的用户文件夹、左侧Onedrive文件夹、以及快捷方式小图标深恶痛绝，势不两立 (我是不是在滥用成语…(逃 使用前须知2：本工具使用AutoHotKey脚本开发，并不是使用WPF开发的，这意味着它的界面会很丑，这也是没办法的事(我尽力了…/笑哭) 1. 软件截图 2.功能演示1. 屏蔽资源管理器用户文件夹 屏蔽前 屏蔽后 2. 屏蔽资源管理器Onedrive文件夹 屏蔽前 屏蔽后 3. 去掉快捷方式小箭头 屏蔽前 屏蔽后 4. 任务栏鼠标滚轮调节音量开启后把鼠标移到任务栏转动滑轮试试看","categories":[{"name":"AutoHotKey","slug":"AutoHotKey","permalink":"http://www.lolimay.cn/categories/AutoHotKey/"}],"tags":[{"name":"AutoHotKey","slug":"AutoHotKey","permalink":"http://www.lolimay.cn/tags/AutoHotKey/"},{"name":"AHK","slug":"AHK","permalink":"http://www.lolimay.cn/tags/AHK/"}]},{"title":"使用AutoHotKey开发简单的GUI程序","slug":"使用AutoHotKey开发简单的GUI程序","date":"2018-03-07T12:28:41.000Z","updated":"2018-03-07T16:39:08.890Z","comments":true,"path":"2018/03/07/使用AutoHotKey开发简单的GUI程序/","link":"","permalink":"http://www.lolimay.cn/2018/03/07/使用AutoHotKey开发简单的GUI程序/","excerpt":"虽然平时开发GUI程序都是WPF，但是WPF也有它自己的缺点：启动速度太慢(我没查找相关的方法)、占用内存过高等。而用AutoHotKey开发的GUI程序则规避了这些缺点，虽然界面很丑，但还是够用了!","text":"虽然平时开发GUI程序都是WPF，但是WPF也有它自己的缺点：启动速度太慢(我没查找相关的方法)、占用内存过高等。而用AutoHotKey开发的GUI程序则规避了这些缺点，虽然界面很丑，但还是够用了!下面简单记录一下我在开发AutoHotKey GUI过程中遇到的需求已经相关解决解决方案： 1. 自定义窗体Icon1Menu, Tray, Icon, G:\\收藏\\图库\\AHK图标\\appIcon.ico 注：必须要绝对地址 2. 将资源文件编译进exe文件1FileInstall, source, dest, 1 3. 添加超链接1Gui, Add, Link,x93 y245, &lt;a href=\"tencent://message/?uin=1404363070\"&gt;联系作者&lt;/a&gt; 4. 创建多个窗体12345678910Gui, MainWindow:Font, s9, Microsoft YaheiGui, MainWindow:Add, Button, x63 y36 w70 h28 , 屏蔽Gui, MainWindow:Add, Button, x143 y36 w70 h28 , 恢复Gui, MainWindow:Font, s10, Microsoft YaheiGui, MainWindow:Add, Text, x40 y8 w161 h19 cPurple, 屏蔽资源管理器用户文件夹Gui, MainWindow:Add, Text, x10 y41 w41 h19 cBlue, 未屏蔽Gui, MainWindow:Add, Link,x93 y245, &lt;a href=\"tencent://message/?uin=1404363070\"&gt;联系作者&lt;/a&gt;Gui, MainWindow:Show, w240 h268, 美化工具箱Gui, AnotherWindow:Show, x150 y260 w20 h28, 美化工具箱 ; 创建第2个窗体 说明：在创建Gui窗口时增加标签即可 5. 给控件添加事件1234Gui, MainWindow:Add, Button, x63 y36 w70 h28 gTest, 屏蔽 ; g标签Test:Gui, AnotherWindow:Show, x150 y260 w20 h28, 美化工具箱return 6. 打开子窗体时禁用主窗体1Gui, MainWindow:+Disabled 7. 给窗体加标签1Gui, MainWindow:+LabelMainWindow 8.以管理员权限执行1234567891011if not (A_IsAdmin or RegExMatch(full_command_line, \" /restart(?!\\S)\"))&#123; try &#123; if A_IsCompiled Run *RunAs \"%A_ScriptFullPath%\" /restart else Run *RunAs \"%A_AhkPath%\" /restart \"%A_ScriptFullPath%\" &#125; ExitApp&#125;","categories":[{"name":"AutoHotKey","slug":"AutoHotKey","permalink":"http://www.lolimay.cn/categories/AutoHotKey/"}],"tags":[{"name":"AHK","slug":"AHK","permalink":"http://www.lolimay.cn/tags/AHK/"},{"name":"AutoHotkey","slug":"AutoHotkey","permalink":"http://www.lolimay.cn/tags/AutoHotkey/"}]},{"title":"Hexo迁移简单记录","slug":"Hexo迁移简单记录","date":"2018-03-07T09:32:29.000Z","updated":"2018-03-07T10:06:10.259Z","comments":true,"path":"2018/03/07/Hexo迁移简单记录/","link":"","permalink":"http://www.lolimay.cn/2018/03/07/Hexo迁移简单记录/","excerpt":"这几天巨硬一直在催着我更新系统，一言不合就在后台自动下载好Win10易升，然后自动启动强制更新。尽管我尝试了各种方法去阻止这个易升自动弹出来强制更新：包括关闭更新服务，将易升文件夹的文件权限改为只有用户可以修改…无奈，所有的方法在巨硬面前都是弱鸡。算了，我还是妥协吧!其实最关键的是它易升无法自动完成升级(可能是我关闭自动更新太久的缘故/哭)，官方建议我直接用U盘重装系统。好在花了一天的时间，大概已经把我的电脑恢复之前使用的配置了(C盘剩余空间也因此大了20个G，也算是给我的唯一一丝慰藉吧~ /无奈)","text":"这几天巨硬一直在催着我更新系统，一言不合就在后台自动下载好Win10易升，然后自动启动强制更新。尽管我尝试了各种方法去阻止这个易升自动弹出来强制更新：包括关闭更新服务，将易升文件夹的文件权限改为只有用户可以修改…无奈，所有的方法在巨硬面前都是弱鸡。算了，我还是妥协吧!其实最关键的是它易升无法自动完成升级(可能是我关闭自动更新太久的缘故/哭)，官方建议我直接用U盘重装系统。好在花了一天的时间，大概已经把我的电脑恢复之前使用的配置了(C盘剩余空间也因此大了20个G，也算是给我的唯一一丝慰藉吧~ /无奈) 扯远了，下面简单记录一下自己迁移Hexo到新系统上的步骤： 重要前提： 你的原来的Hexo目录必须还在 1. 安装软件首先安装自行安装好以下软件： 1. nodejs2. git3. hexo12npm install hexo -gnpm install hexo-cli -g 注：为保险起见，最好先cd到你的Hexo根目录下 2. 配置密钥1. 在本机上生成秘钥1ssh-keygen -t rsa -C \"your@email.com\" 2. 拷贝公钥到服务器上将本机上`~/.ssh/id_rsa.pub文件中的内容拷贝到服务器/home/git/.ssh/authorized_keys文件中 3. 配置用户名和邮箱信息在新系统上第一次使用hexo d命令将博客文件部署到服务器上时，服务器会问你Who are you 这时按照命令行的要求填写自己的用户名和邮箱就好，以后就不会再提示。 4. 重启电脑解决命令行找不到Hexo相关命令的错误，如果你可以直接hexo d上去了，就不用重启啦~","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.lolimay.cn/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.lolimay.cn/tags/Hexo/"}]},{"title":"CSS3学习笔记","slug":"CSS3学习笔记","date":"2018-03-04T12:44:30.000Z","updated":"2018-07-25T01:02:32.603Z","comments":true,"path":"2018/03/04/CSS3学习笔记/","link":"","permalink":"http://www.lolimay.cn/2018/03/04/CSS3学习笔记/","excerpt":"在使用CSS的过程中，接触CSS属性的频率实在太高了，还是静下心来好好总结CSS那些属性的作用比较好，不然学了就忘其实没什么效果~这里先引用一段我在学习《CSS世界》的时候写的笔记。 1.布局更丰富:移动端的崛起，催生了CSS3媒介查询、许多响应式布局特性 盒子布局(flexible box layout) 布局(grid layout)2.视觉表现长足进步:圆角、阴影和渐变让元素更有质感transform变换让元素有更多可能filter滤镜和混合模式让Web轻松变为在线的Photoshopanimation让动画变得简单 下面我也就按照这个顺序好好了解一下这些属性(其实圆角、阴影和transform:scale()等属性我平时都已经用了很多次了)","text":"在使用CSS的过程中，接触CSS属性的频率实在太高了，还是静下心来好好总结CSS那些属性的作用比较好，不然学了就忘其实没什么效果~这里先引用一段我在学习《CSS世界》的时候写的笔记。 1.布局更丰富:移动端的崛起，催生了CSS3媒介查询、许多响应式布局特性 盒子布局(flexible box layout) 布局(grid layout)2.视觉表现长足进步:圆角、阴影和渐变让元素更有质感transform变换让元素有更多可能filter滤镜和混合模式让Web轻松变为在线的Photoshopanimation让动画变得简单 下面我也就按照这个顺序好好了解一下这些属性(其实圆角、阴影和transform:scale()等属性我平时都已经用了很多次了) 1. 圆角border-radius可以将元素的四个角设置成圆角 1.属性值border-radius最多支持使用四个属性值 一个值 如border-radius:5px; 则该元素的四个角都使用这个值 两个值 如border-radius:20px 0px; 则该元素的左上角和右下角使用第一个值，左下角和右上角使用第二个值 三个值 如border-radius:1px 2px 3px; 则该元素左上角使用第一个值，左下角和右上角使用第二个值，右下角使用第三个值 四个值 如border:1px 2px 3px 4px; 则依次对应左上角、右上角、右下角、左下角(即从左上角开始顺时钟绕一圈) 2.斜杠二组值border-radius支持单独设置每个圆角的水平半径和垂直半径，第一组值表示水平半径，第二组值表示垂直半径 如： 1border-radius: 50px 30px 20px 10px / 20px 30px 20px 30px; 技巧：使用border-radius:50%;将一个正方形元素变成圆形 2. 阴影1.框阴影box-shadow属性可以向框添加一个或多个阴影 语法：box-shadow: h-shdow v-shadow blur spread color inset; 值 描述 h-shadow 必需水平阴影的位置 允许负值 v-shadow 必需垂直阴影的位置 允许负值 blur 可选模糊距离 spread 可选阴影尺寸 color 可选阴影颜色 inset 可选将外部阴影 (outset) 改为内部阴影 2.文本阴影text-shadow属性可以向文本添加一个或多个阴影 语法：text-shadow: h-shadow v-shadow blur color 值 描述 h-shadow 必需水平阴影的位置 允许负值 v-shadow 必需垂直阴影的位置 允许负值 blur 可选模糊距离 color 可选阴影颜色 3. transform变换1. 2D变换 方法 作用 translate(left,top) 平移变换 rotate(degree) 旋转变换 scale() 伸缩变换 skew() 翻转变换 matrix() 组合变换","categories":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/categories/CSS/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/tags/CSS/"},{"name":"CSS读书笔记","slug":"CSS读书笔记","permalink":"http://www.lolimay.cn/tags/CSS读书笔记/"}]},{"title":"C#项目实战：NewArticle","slug":"C-项目实战-NewArticle","date":"2018-03-02T16:25:23.000Z","updated":"2018-07-27T16:20:33.045Z","comments":true,"path":"2018/03/03/C-项目实战-NewArticle/","link":"","permalink":"http://www.lolimay.cn/2018/03/03/C-项目实战-NewArticle/","excerpt":"花了一晚上做了一个快速新建Hexo文章的软件，预计支持的功能主要有: 快捷键呼出，输入文章标题后按下Enter键打开Typora编辑器编辑新的Markdown文件。这篇文章记录的是我在制作该软件的过程中的笔记，主要用于个人以后查阅，对其他的人可能可读性不高，大家凑合着看吧，或许会有能够帮到你的也不一定哦~","text":"花了一晚上做了一个快速新建Hexo文章的软件，预计支持的功能主要有: 快捷键呼出，输入文章标题后按下Enter键打开Typora编辑器编辑新的Markdown文件。这篇文章记录的是我在制作该软件的过程中的笔记，主要用于个人以后查阅，对其他的人可能可读性不高，大家凑合着看吧，或许会有能够帮到你的也不一定哦~ 1. 窗口启动居中修改MainWindow.xaml文件，给Window元素添加属性WindowStartupLocation=&quot;CenterScreen&quot; 2. 使用DMSkinUI库Step1 引用右键-&gt;添加引用-&gt;导入DMSkin.WPF.Small.dll Step2 using DMSkin.WPF.Small以及继承DMSkinWindow 如: 123456789101112using DMSkin.WPF.Small;namespace MyFirstWpf&#123; /// &lt;summary&gt; /// MainWindow.xaml 的交互逻辑 /// &lt;/summary&gt; public partial class MainWindow : DMSkinWindow &#123; public MainWindow() =&gt; InitializeComponent(); //初始化 &#125;&#125; Step3 修改MainWindow.xaml文件 将&lt;Window x:Class=&quot;projectName.MainWindow&quot;换成&lt;DMSkin:DMSkinWindow x:Class=&quot;projectName.MainWindow&quot;这时会提示缺少引用，将光标移至划波浪线处，Alt+Enter自动补全引用 如: 1234567891011121314151617 &lt;DMSkin:DMSkinWindow xmlns:DMSkin=\"clr-namespace:DMSkin.WPF.Small;assembly=DMSkin.WPF.Small\" x:Class=\"NewArticle.MainWindow\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:local=\"clr-namespace:NewArticle\" mc:Ignorable=\"d\" WindowStartupLocation=\"CenterScreen\" Title=\"MainWindow\" Height=\"350\" Width=\"525\"&gt; &lt;Grid&gt; &lt;Grid.ColumnDefinitions&gt; &lt;ColumnDefinition/&gt; &lt;/Grid.ColumnDefinitions&gt; &lt;/Grid&gt;&lt;/DMSkin:DMSkinWindow&gt; 3. 无边框拖动(配合DMSkin使用)Step1 在MainWindow.xaml.cs中添加Window_MouseDown事件 如： 1234567891011private void Window_MouseDown(object sender, MouseButtonEventArgs e)&#123; try &#123; DragMove(); //实现无边框窗体的拖动 &#125; catch &#123; // do nothing &#125;&#125; 注：用try..catch语句是因为防止抛异常 Step2 在MainWindow.xaml中绑定事件MouseDown=&quot;Window_MouseDown&quot; 4. DMSkin常见接口1. 隐藏窗体最大化、最小化按钮修改MainWindow.xaml文件，添加以下属性 12DMShowMax=\"False\"DMShowMin=\"False\" 2. 设置窗体四周边框阴影的大小修改MainWindow.xaml文件，添加以下属性 1DMWindowShadowSize=\"20\" &lt;!--四周边框阴影大小--&gt; 3. 其它属性DMShowClose 是否显示关闭窗口按钮 5. TextBox相关设置1. 将TextBox的边框设置为圆角将修改的样式写在TextBox的resource中 如: 12345678910&lt;TextBox&gt; &lt;TextBox.Resources&gt; &lt;Style TargetType=\"&#123;x:Type Border&#125;\"&gt; &lt;Setter Property=\"CornerRadius\" Value=\"4\"/&gt; &lt;Setter Property=\"BorderBrush\" Value=\"#c1d0dc\"/&gt; &lt;/Style&gt; &lt;/TextBox.Resources&gt;&lt;/TextBox&gt; 2. 将TextBox的光标居中设置TextBox的属性为VerticalContentAlignment=&quot;Center&quot; 如: 1&lt;TextBox VerticalContentAlignment=\"Center\" /&gt; 3. 指定TextBox的光标颜色设置TextBox的属性为CaretBrush=&quot;#c2c3c9&quot; 如: 1&lt;TextBox CaretBrush=\"#c2c3c9\" /&gt; 4. 添加Enter事件Step1 添加keydown事件 Step2 判断按下的键是否是Enter键 如: 1234567private void TextBox_col_KeyDown(object sender, KeyEventArgs e)&#123; if (e.Key == Key.Enter) &#123; //Here is your code &#125;&#125; 6. cmd执行类12345678910111213141516171819202122232425262728293031323334353637383940414243444546using System.Diagnostics;using System.Text;namespace NewArticle&#123; class Cmd &#123; private static string CmdPath = @\"C:\\Windows\\System32\\cmd.exe\"; /// &lt;summary&gt; /// 执行cmd命令 /// 多命令请使用批处理命令连接符： /// &lt;![CDATA[ /// &amp;:同时执行两个命令 /// |:将上一个命令的输出,作为下一个命令的输入 /// &amp;&amp;：当&amp;&amp;前的命令成功时,才执行&amp;&amp;后的命令 /// ||：当||前的命令失败时,才执行||后的命令]]&gt; /// 其他请百度 /// &lt;/summary&gt; /// &lt;param name=\"cmd\"&gt;&lt;/param&gt; /// &lt;param name=\"output\"&gt;&lt;/param&gt; public static void RunCmd(string cmd, out string output) &#123; cmd = cmd.Trim().TrimEnd('&amp;') + \"&amp;exit\";//说明：不管命令是否成功均执行exit命令，否则当调用ReadToEnd()方法时，会处于假死状态 using (Process p = new Process()) &#123; p.StartInfo.StandardOutputEncoding = Encoding.UTF8; // 使用UTF-8编码 p.StartInfo.FileName = CmdPath; p.StartInfo.UseShellExecute = false; //是否使用操作系统shell启动 p.StartInfo.RedirectStandardInput = true; //接受来自调用程序的输入信息 p.StartInfo.RedirectStandardOutput = true; //由调用程序获取输出信息 p.StartInfo.RedirectStandardError = true; //重定向标准错误输出 p.StartInfo.CreateNoWindow = true; //不显示程序窗口 p.Start();//启动程序 //向cmd窗口写入命令 p.StandardInput.WriteLine(cmd); p.StandardInput.AutoFlush = true; //获取cmd窗口的输出信息 output = p.StandardOutput.ReadToEnd(); p.WaitForExit();//等待程序执行完退出进程 p.Close(); &#125; &#125; &#125;&#125; 7. 正则匹配1234foreach (Match match in Regex.Matches(string,pattern))&#123; pos = match.Index;&#125; 8. 判断文件是否存在1File.Exists(string directory) 9. 延迟几秒再执行Step1 将方法改成异步（async），并且用Action封装一个方法，再用await Task.Run()指定异步方法 如: 1234567async void label1_Click(object sender, EventArgs e)&#123; message1.Show(); //用Action封装一个方法，再用await Task.Run()执行异步方法 Action action= AsyncMethod; await Task.Run(action);&#125; Step2 创建异步方法AsyncMethod 如: 12345678public void AsyncMethod()&#123; Thread.Sleep(2000); //延时2秒 message1.Text = \"抱歉，未检查到新版本！\"; Thread.Sleep(2000); version_message1.Hide(); message1.Text = \"正在检查更新...\";&#125; 注: WPF程序不允许非UI线程更新UI内容,但可以通过委托曲线救国: 1控件名.Dispatcher.Invoke(new System.Action(delegate &#123; 控件名.IsEnabled = false; &#125;)); 10. 退出程序 this.Close(); 只是关闭当前窗口，若不是主窗体的话，是无法退出程序的，另外若有托管线程（非主线程），也无法干净地退出； Application.Exit(); 强制所有消息中止，退出所有的窗体，但是若有托管线程（非主线程），也无法干净地退出； Application.ExitThread(); 强制中止调用线程上的所有消息，同样面临其它线程无法正确退出的问题； System.Environment.Exit(0); 这是最彻底的退出方式，不管什么线程都被强制退出，把程序结束的很干净。 值得注意的是： this.Close(); 仅仅是关闭当前窗体，如果窗体中有循环，循环仍会继续运行。 最后，展示一下我的成品^_^","categories":[],"tags":[{"name":"C#","slug":"C","permalink":"http://www.lolimay.cn/tags/C/"}]},{"title":"Android项目实战：课程表","slug":"Android项目实战-课程表","date":"2018-03-02T12:32:41.000Z","updated":"2018-07-27T16:20:32.784Z","comments":true,"path":"2018/03/02/Android项目实战-课程表/","link":"","permalink":"http://www.lolimay.cn/2018/03/02/Android项目实战-课程表/","excerpt":"记录我在开发自己的课程表的过程中遇见的问题以及相应的解决方案，方便以后自己查看~","text":"记录我在开发自己的课程表的过程中遇见的问题以及相应的解决方案，方便以后自己查看~ 1. 解决App启动短暂黑屏Step1 在res/values/styles.xml添加自定义样式并将windowBackground的属性值设为你自己的图片资源 1234&lt;style name=\"WelcomeStyle\" parent=\"android:Theme.NoTitleBar.Fullscreen\"&gt; &lt;item name=\"android:windowBackground\"&gt;&lt;!--这里换成你的图片路径--&gt;&lt;/item&gt; &lt;item name=\"android:windowNoTitle\"&gt;true&lt;/item&gt;&lt;/style&gt; Step2 在AndroidManifest.xml文件中指定启动Activity的style为刚才自定义的样式android:theme=&quot;@style/WelcomeStyle&quot; 假设你的启动Activity为MainActivity则将上面一行添加至以下位置 2. 实现App全屏其实还是设置Activity的style，首先确定你需要全屏的Activity的style是什么，没有就自己添加一个样式（方法见1. 解决App启动短暂黑屏）。接着设置你添加的样式的parent=&quot;android:Theme.NoTitleBar.Fullscreen&quot;如： 123&lt;style name=\"WelcomeStyle\" parent=\"android:Theme.NoTitleBar.Fullscreen\"&gt; &lt;item name=\"android:windowNoTitle\"&gt;true&lt;/item&gt;&lt;!--去掉App的标题--&gt;&lt;/style&gt; 3. 只要切换至后台即结束当前Activity思路很简单，重写onstop()方法就好，加一个this.finish()爽歪歪… 12345@Overrideprotected void onStop() &#123; super.onStop(); this.finish();&#125; ==== 2018年3月27日更新 ==== 1. 注意在新建项目的时候一定要选择Empty Activity 2. 系统默认的Activity是和Fullscreen样式有冲突的，直接将MainActivity的样式设置为Fullscreen会导致app闪退的严重后果 解决方法：修改MainActivity.java文件，将MainActivity类直接继承自Activity类即可","categories":[{"name":"Android","slug":"Android","permalink":"http://www.lolimay.cn/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://www.lolimay.cn/tags/Android/"}]},{"title":"考驾照错题笔记","slug":"考驾照错题笔记","date":"2018-03-01T04:06:27.000Z","updated":"2018-07-27T16:20:32.653Z","comments":true,"path":"2018/03/01/考驾照错题笔记/","link":"","permalink":"http://www.lolimay.cn/2018/03/01/考驾照错题笔记/","excerpt":"最近在考驾照，就单独开一篇文章去记录一下我在备考科目一过程中遇到的错题吧!","text":"最近在考驾照，就单独开一篇文章去记录一下我在备考科目一过程中遇到的错题吧! 1. 禁止停车与禁止长时停车首先我们要先了解一下临时停车与长时停车的概念，临时停车一般是指停车后车辆不熄火、驾驶员不下车，而长时停车一般是指停车后车辆熄火、驾驶员下车去别处了。 1.标线马路边涂了黄颜色，满漆是禁停标线，虚线是禁止长时停车标线 2.标志 2. 匝道与加速道1.匝道匝道分为上匝道和下匝道，分别是高速公路的入口与出口。 2.加速车道加速车道在匝道的后面，车辆在此车道加速至60km/h以上后才能进入高速车道 示意图 3. 交警手势一共有八种交警手势，分别是停止信号、直行信号、左转弯信号、左转弯待转信号、右转弯信号、变道信号、减速慢行信号和靠边停车信号。 1. 停止信号交警的身体和面部均正朝着驾驶员，左手高过肩，举手朝向驾驶员，无其他动作 2.直行信号 交警的身体和面部均正朝着驾驶员，右手和左手方向在一条线上，右手做动作朝向左手的方向 直行信号 3.左转弯信号交警的身体侧对着朝着驾驶员，交警的面部朝着哪个方向就是在指挥哪个方向的车，手掌心朝哪个方向就朝哪边转 左转弯信号 4.左转弯待转信号交警的身体侧对着朝着驾驶员，交警的面部朝着哪个方向就是在指挥哪个方向的车，交警向斜下方伸出左手 左转弯待转信号 5.右转弯信号交警的身体侧对着朝着驾驶员，交警的面部朝着哪个方向就是在指挥哪个方向的车，手掌心朝哪个方向就朝哪边转 右转弯信号 6.变道信号交警的身体和面部均正朝着驾驶员，右手从右边往中间移动，告诉你该变道了 变道信号 7.减速慢行信号交警的身体和面部均正朝着驾驶员，右手从与肩部平行状态下往下压 减速慢行信号 8.靠边停车信号交警的身体和面部均正朝着驾驶员，左手高过肩，右手斜向下并向中间移动 其它小知识点 驾驶机动车需要在路边停车时应该在停车泊位内停放 公共汽车站、急救站、加油站、消防栓或消防站30米以内不准停车 交叉路口、铁路道口、急弯路、宽度不足4米的窄路、桥梁、陡坡、隧道50米以内不准停车 在设有禁停标志、标线的路段，在设有隔离措施的非机动车道以及人行横道、施工地段不得停车 上了高速正常情况下最低车速是60km/h。同向两车道的左侧车道最低时速100km/h，同向三车道时速从左至右依次是110-120km/h、90-110km/h、60-90km/h(从左至右的车速差依次是10、20、30) 从匝道驶入高速主路时，必须打左转向灯 进入减速车道要打右转向灯 时速超过100km/h，车距100m以上; 时速低于100km/h，车距50m以上 高速上能见度低于200m，时速不能超过60km/h，车距100m以上 高速上能见度低于100m，时速不能超过40km/h，车距50m以上 高速上能见度低于50m，车速不能超过每小时20km/h，应尽快驶离高速公路 驶入高速: 打左转向灯，按照地面导流标线行驶，不可压实线 驶离高速: 打右转向灯，从虚线驶入减速车道 不能压实线直接进入匝道，应该提前换到匝道驶离高速 在高速上车子出故障了，警告标志应该放在车后150m以外处 在高速车子出故障: 开启危险报警闪光灯、按规定设立警告标志、撤到相对安全的位置、报警 在高速车子出故障由清障车拖拽或牵引 交通事故: 造成人员伤亡应该立即抢救伤员，未明确责任应当保护现场(先判断事故责任)，并迅速报警。 驾驶人在发生交通事故后因抢救伤员变动现场时要标明位置 驾驶人连续驾驶不能超过4小时，超过4小时后应休息20分钟以上 ​","categories":[{"name":"Life","slug":"Life","permalink":"http://www.lolimay.cn/categories/Life/"}],"tags":[{"name":"Life","slug":"Life","permalink":"http://www.lolimay.cn/tags/Life/"}]},{"title":"折腾Next主题中的motion.js","slug":"折腾Next主题中的motion-js","date":"2018-02-28T08:50:10.000Z","updated":"2018-07-27T16:20:32.653Z","comments":true,"path":"2018/02/28/折腾Next主题中的motion-js/","link":"","permalink":"http://www.lolimay.cn/2018/02/28/折腾Next主题中的motion-js/","excerpt":"Next主题中的motion.js和网站中的动画有关，因此像我这种喜欢自定义样式和动画的用户还是很有必要研究一下motion.js的具体内容。同时，在研究这个js文件的同时，也能顺便提高一下我的javascript能力，何乐而不为呢?","text":"Next主题中的motion.js和网站中的动画有关，因此像我这种喜欢自定义样式和动画的用户还是很有必要研究一下motion.js的具体内容。同时，在研究这个js文件的同时，也能顺便提高一下我的javascript能力，何乐而不为呢? 1. jQuery 事件 - ready() 方法 当DOM已经加载，并且页面(包括图像)已经完全呈现时，会发生ready事件。 由于该事件在文档就绪后发生，因此把所有其他的jQuery事件和函数置于该事件中是非常好的做法。 ready()函数规定当ready事件发生时执行的代码。 ready()函数仅能用于当前文档，因此无需选择器。 ready()函数不应与&lt;body onload=&quot;&quot;&gt;一起使用。 123$(document).ready(function) /* 写法1 */$().ready(function) /* 写法2 */$(function) /* 写法3 */ 快速浏览了一下整个js文件，发现有三个动画: 侧边栏按钮动画 标题动画 侧边栏弹出/弹回动画 好了，知道这三个动画所在的位置，相信只要读者稍微会一点javascript应该就会自己修改成自己的想要效果了~ (逃","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.lolimay.cn/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.lolimay.cn/tags/Hexo/"}]},{"title":"","slug":"AHK定时器的标准写法","date":"2018-02-27T08:53:46.612Z","updated":"2018-07-27T16:20:33.111Z","comments":true,"path":"2018/02/27/AHK定时器的标准写法/","link":"","permalink":"http://www.lolimay.cn/2018/02/27/AHK定时器的标准写法/","excerpt":"title: AHK中定时器的标准写法date: 2018-02-27 16:53:46 tags: [AutoHotKey]AutoHotKey脚本自带一个setTimer指令，今天我在实际使用中用到了这个特性，尝试了多次才成功，特地记下以便备忘。","text":"title: AHK中定时器的标准写法date: 2018-02-27 16:53:46 tags: [AutoHotKey]AutoHotKey脚本自带一个setTimer指令，今天我在实际使用中用到了这个特性，尝试了多次才成功，特地记下以便备忘。 1234567#persistentsetTimer, mainc, 30000 ; 重复执行的时间间隔returnmainc:;待执行的代码return","categories":[],"tags":[]},{"title":"《CSS世界》读书笔记","slug":"《CSS世界》读书笔记","date":"2018-02-27T02:18:19.000Z","updated":"2018-07-27T16:20:33.011Z","comments":true,"path":"2018/02/27/《CSS世界》读书笔记/","link":"","permalink":"http://www.lolimay.cn/2018/02/27/《CSS世界》读书笔记/","excerpt":"","text":"CSS世界的诞生就是为图文信息展示服务的。 1. 流“流”是CSS中一种基本的定位和布局机制,它引导着HTML中元素的排列和定位。HTML默认采用流体布局，我们也可以通过破坏”流”来实现特殊布局。默认的流向是从左向右、自上而下，但这种流向我们也是可以改变的。 1. 流体布局:指的是利用元素”流”的特性实现的各类布局效果。因为”流”本身具有自适应特性，所以流体布局是具有自适应性的。(注意: 自适应布局是对具有自适应特性的一类布局的统称，它包括流体布局) 2. &lt;table&gt;标签 “流”的特性对&lt;table&gt;并不适用，因为它不属于CSS。 3. CSS3新特性:① 布局更丰富: 移动端的崛起，催生了CSS3媒介查询、许多响应式布局特性 弹性盒子布局(flexible box layout) 格栅布局(grid layout) ② 视觉表现长足进步: 圆角、阴影和渐变让元素更有质感 transform变换让元素有更多可能 filter滤镜和混合模式让Web轻松变为在线的Photoshop animation让动画变得简单 由于CSS3设计初衷是为了实现更丰富、更复杂的网页，所以基本上和”流”的关系并不大。 2. CSS的专业术语 属性 (height、color、width等) 值 (整数值、数值、百分比值、长度值、颜色值、字符串值、角度值、频率值、时间值等) 关键字 (transparent、solid、inherit等) 变量 (currentColor等) 长度单位 (相对字体长度单位:em、ex 相对视区长度单位:vh、vw、vmin、vmax 绝对长度单位:px等) 功能符 (rgba、hsla、url、calc、scale等) 属性值 声明、声明块 规则、规则集 选择器 (类选择器、ID选择器、属性选择器、伪类选择器、伪元素选择器、关系选择器: 后代选择器、相邻后代选择器、兄弟选择器、相邻兄弟选择器) @规则 3. 未定义行为指的是规范顾及不到的细枝末节的实现，就称为”未定义行为” 如: firefox认为:active发生在mousedown事件之后，而IE/Chrome认为:active发生在mousedown事件之前。 4. 流、元素与基本尺寸我们通常把HTML标签分为两类: 块级元素(block-level element)和内联元素(inline element) 知识点1. 利用上下边框颜色的叠加实现凹陷效果 12border-bottom: 1px solid #b70000;border-top: 1px solid #de3636; 让我们分析一下为什么会这么神奇: 放大400%后的效果 原来是利用上下边框的颜色深浅差异,给人一种凹陷的错觉。 参考链接：http://demo.cssworld.cn/3/2-3.php 3.2 width/height作用的具体细节3.2.1 深藏不露的 width:autowidth:auto 包含了4种不同的宽度表现: 充分利用可用空间(块级元素的宽度默认100%于父级元素) 收缩与包裹(收缩到合适) 收缩到最小(文字能断就断: 中文随便断、英文单词不能断) 超出容器限制(内容很长的连续的英文或数字、或者内联元素被设置了white-space:nowrap) 充分利用可用空间是唯一的外部尺寸, 其余都是内部尺寸, 而这唯一的外部尺寸,是流的精髓所在。","categories":[{"name":"css","slug":"css","permalink":"http://www.lolimay.cn/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"http://www.lolimay.cn/tags/css/"}]},{"title":"让你的Android应用申请root权限","slug":"让你的Android应用申请root权限","date":"2018-02-25T00:07:30.000Z","updated":"2018-07-27T16:20:32.607Z","comments":true,"path":"2018/02/25/让你的Android应用申请root权限/","link":"","permalink":"http://www.lolimay.cn/2018/02/25/让你的Android应用申请root权限/","excerpt":"​在实际的Android开发中，我们开发的应用可能会需要申请root权限，但应该怎么样写这段代码呢？ 这里提供一个申请root权限的类，方便大家使用～","text":"​在实际的Android开发中，我们开发的应用可能会需要申请root权限，但应该怎么样写这段代码呢？ 这里提供一个申请root权限的类，方便大家使用～ Step1 在Android Studio中新建一个SystemManager.java类 SystemManager.java的内容如下： 123456789101112131415161718192021222324252627282930313233343536373839package com.example.lolimay;import java.io.DataOutputStream;import android.app.Activity;import android.util.Log;public class SystemManager extends Activity &#123; /** * 应用程序运行命令获取 Root权限，设备必须已破解(获得ROOT权限) * @param command 命令：String apkRoot=\"chmod 777 \"+getPackageCodePath(); RootCommand(apkRoot); * @return 应用程序是/否获取Root权限 */ public static boolean RootCommand(String command) &#123; Process process = null; DataOutputStream os = null; try &#123; process = Runtime.getRuntime().exec(\"su\"); os = new DataOutputStream(process.getOutputStream()); os.writeBytes(command + \"\\n\"); os.writeBytes(\"exit\\n\"); os.flush(); process.waitFor(); &#125; catch (Exception e) &#123; Log.d(\"*** DEBUG ***\", \"ROOT REE\" + e.getMessage()); return false; &#125; finally &#123; try &#123; if (os != null) &#123; os.close(); &#125; process.destroy(); &#125; catch (Exception e) &#123; &#125; &#125; Log.d(\"*** DEBUG ***\", \"Root SUC \"); return true; &#125;&#125; 注意： 第一行的包名要改成自己的（学会变通） Step2 在MainActivity.java中添加两行代码 12String apkRoot=\"chmod 777 \"+getPackageCodePath();SystemManager.RootCommand(apkRoot); 大功告成！打开root后的手机或者root后的模拟器试试把～","categories":[{"name":"Android","slug":"Android","permalink":"http://www.lolimay.cn/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://www.lolimay.cn/tags/Android/"}]},{"title":"让安卓模拟器具有root权限","slug":"让安卓模拟器具有root权限","date":"2018-02-24T23:15:26.000Z","updated":"2018-07-27T16:20:33.208Z","comments":true,"path":"2018/02/25/让安卓模拟器具有root权限/","link":"","permalink":"http://www.lolimay.cn/2018/02/25/让安卓模拟器具有root权限/","excerpt":"​在实际Android开发过程中，某些待调试的应用可能需要root权限，但是AVD Manager默认创建的AVD是不带root权限的，这时候应该怎样才能才能root我们的AVD呢？","text":"​在实际Android开发过程中，某些待调试的应用可能需要root权限，但是AVD Manager默认创建的AVD是不带root权限的，这时候应该怎样才能才能root我们的AVD呢？ 这里我们采取一个曲线救国的方式，采用第三方安卓模拟器（genymotion，自带root权限)创建一个虚拟设备，然后在Android Studio中安装这个模拟器的插件，最后调试的时候AVD就能自动识别这个虚拟设备并调用它。 详细步骤： 前言：由于博主是在Deepin系统下进行的的，所以大家在按照我的教程走的时候还是要变通，遇到一些细节问题还是要学会百度（善于使用搜索引擎是程序员的基本素质）。 Step1 安装genymotion并创建一个自定义镜像 打开深度商店下载genymotion模拟器 安装完毕后，打开Genymotion创建虚拟安卓设备 点击运行启动虚拟安卓设备，如图： 注意：这一步结束后这个窗口要一直挂在后台，别把它关闭了，否则后面AVD Manager会识别不出这个设备 Step2 在Android Studio中安装Genymotion插件 打开Android Studio-&gt;顶部菜单栏-&gt;File-&gt;Settings-&gt;Plugins-&gt;Browse repositories-&gt;在搜索框搜索**genymotion**-&gt;安装genymotion 这时候你会发现其实你已经成功了，点击run app（就是那个绿色的播放键）按钮，启动调试，这时候你会在设备列表中发现你刚刚创建的Genymotion虚拟设备，大功告成！","categories":[{"name":"Android","slug":"Android","permalink":"http://www.lolimay.cn/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://www.lolimay.cn/tags/Android/"},{"name":"Android Studio","slug":"Android-Studio","permalink":"http://www.lolimay.cn/tags/Android-Studio/"}]},{"title":"Emulator： libGL error： unable to load driver： i965_dri.so","slug":"AndroidStudio使用模拟器调试出现错误","date":"2018-02-24T09:15:38.000Z","updated":"2018-07-27T16:20:32.607Z","comments":true,"path":"2018/02/24/AndroidStudio使用模拟器调试出现错误/","link":"","permalink":"http://www.lolimay.cn/2018/02/24/AndroidStudio使用模拟器调试出现错误/","excerpt":"在Deepin系统下使用Android Studio开发移动应用时，当使用模拟器调试时出现了以下报错： 1234567891011121314151617181920212223242526272829下午5:07 Emulator: libGL error: unable to load driver: i965_dri.so下午5:07 Emulator: libGL error: driver pointer missing下午5:07 Emulator: libGL error: failed to load driver: i965下午5:07 Emulator: libGL error: unable to load driver: i965_dri.so下午5:07 Emulator: libGL error: driver pointer missing下午5:07 Emulator: libGL error: failed to load driver: i965下午5:07 Emulator: libGL error: unable to load driver: swrast_dri.so下午5:07 Emulator: libGL error: failed to load driver: swrast下午5:07 Emulator: X Error of failed request: BadValue (integer parameter out of range for operation)下午5:07 Emulator: Major opcode of failed request: 156 (GLX)下午5:07 Emulator: Minor opcode of failed request: 24 (X_GLXCreateNewContext)下午5:07 Emulator: Value in failed request: 0x0下午5:07 Emulator: Serial number of failed request: 64下午5:07 Emulator: Current serial number in output stream: 65下午5:07 Emulator: Process finished with exit code 1","text":"在Deepin系统下使用Android Studio开发移动应用时，当使用模拟器调试时出现了以下报错： 1234567891011121314151617181920212223242526272829下午5:07 Emulator: libGL error: unable to load driver: i965_dri.so下午5:07 Emulator: libGL error: driver pointer missing下午5:07 Emulator: libGL error: failed to load driver: i965下午5:07 Emulator: libGL error: unable to load driver: i965_dri.so下午5:07 Emulator: libGL error: driver pointer missing下午5:07 Emulator: libGL error: failed to load driver: i965下午5:07 Emulator: libGL error: unable to load driver: swrast_dri.so下午5:07 Emulator: libGL error: failed to load driver: swrast下午5:07 Emulator: X Error of failed request: BadValue (integer parameter out of range for operation)下午5:07 Emulator: Major opcode of failed request: 156 (GLX)下午5:07 Emulator: Minor opcode of failed request: 24 (X_GLXCreateNewContext)下午5:07 Emulator: Value in failed request: 0x0下午5:07 Emulator: Serial number of failed request: 64下午5:07 Emulator: Current serial number in output stream: 65下午5:07 Emulator: Process finished with exit code 1 别看报错这么多，其实原因只有一个： Android Studio自带的stdc++库与系统自带的stdc++库产生了冲突 解决方案： 打开~/Android/Sdk/emulator/lib64/libstdc++删除该目录下的两个.so库文件即可","categories":[{"name":"Android","slug":"Android","permalink":"http://www.lolimay.cn/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://www.lolimay.cn/tags/Android/"},{"name":"Android Studio","slug":"Android-Studio","permalink":"http://www.lolimay.cn/tags/Android-Studio/"}]},{"title":"错误：找不到符号 符号：变量fab","slug":"错误：找不到符号-符号：变量fab","date":"2018-02-24T01:48:56.000Z","updated":"2018-07-27T16:20:32.600Z","comments":true,"path":"2018/02/24/错误：找不到符号-符号：变量fab/","link":"","permalink":"http://www.lolimay.cn/2018/02/24/错误：找不到符号-符号：变量fab/","excerpt":"在使用Android Studio开发Android应用的过程中碰到了如下错误： 123Error:(21, 76) 错误: 找不到符号符号: 变量 fab位置: 类 id 原因：","text":"在使用Android Studio开发Android应用的过程中碰到了如下错误： 123Error:(21, 76) 错误: 找不到符号符号: 变量 fab位置: 类 id 原因： 解决方案： 打开MainActivity.java文件 把红框中的代码全部删除，就不会再报错了（红框中的代码即是和fab按钮对应的java代码）","categories":[{"name":"Android","slug":"Android","permalink":"http://www.lolimay.cn/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://www.lolimay.cn/tags/Android/"},{"name":"Android Studio","slug":"Android-Studio","permalink":"http://www.lolimay.cn/tags/Android-Studio/"}]},{"title":"深度启动盘制作工具无法识别出U盘","slug":"深度启动盘制作工具无法识别出U盘","date":"2018-02-21T10:55:35.000Z","updated":"2018-07-27T16:20:32.572Z","comments":true,"path":"2018/02/21/深度启动盘制作工具无法识别出U盘/","link":"","permalink":"http://www.lolimay.cn/2018/02/21/深度启动盘制作工具无法识别出U盘/","excerpt":"在把U盘用U深度制作成PE盘之后，再打开深度启动盘制作工具会出现无法识别U盘启动的情况，这是什么原因呢？我试试将U盘格式化、重启电脑等各种方法，终究是无法解决问题。无奈只好求助百度，发现在官方论坛已经有类似的反馈，根据官方的介绍，原来是我们的U盘被系统识别成本地磁盘，而不是可移动磁盘，而深度启动盘制作工具默认是屏蔽本地磁盘的。","text":"在把U盘用U深度制作成PE盘之后，再打开深度启动盘制作工具会出现无法识别U盘启动的情况，这是什么原因呢？我试试将U盘格式化、重启电脑等各种方法，终究是无法解决问题。无奈只好求助百度，发现在官方论坛已经有类似的反馈，根据官方的介绍，原来是我们的U盘被系统识别成本地磁盘，而不是可移动磁盘，而深度启动盘制作工具默认是屏蔽本地磁盘的。 我们先来看看系统的磁盘管理工具（快捷键Win+X-&gt;磁盘管理)怎么说： 果然，系统果然搞不清楚U盘的真实身份~现在我们必须要手动帮助系统重新把U盘识别成”U盘”。 解决方案 下载我提供的附件：https://pan.baidu.com/s/1htfw8r6 （密码：bizx）解压放在一旁 用U深度之类的PE制作工具把U盘制作成启动盘 重启进入PE，在PE中打开你刚解压出的文件夹中的程序deepin-boot-maker.exe制作启动盘 注： 本解决方案仅适用于之前使用U深度等其它PE制作工具将U盘刷成启动盘后导致的Win10误将U盘识别成本地磁盘的情况 如果你的U盘连U深度和在PE下电脑也识别不出来，很有可能你的U盘出厂默认就是fixed disk模式 （如闪迪等品牌的U盘、官方已声明这种类型的U盘不支持制作PE盘）或者是你的U盘本身已有问题 ​","categories":[{"name":"重装系统","slug":"重装系统","permalink":"http://www.lolimay.cn/categories/重装系统/"}],"tags":[{"name":"重装系统","slug":"重装系统","permalink":"http://www.lolimay.cn/tags/重装系统/"},{"name":"Deepin","slug":"Deepin","permalink":"http://www.lolimay.cn/tags/Deepin/"}]},{"title":"修复引导那些事","slug":"修复引导那些事","date":"2018-02-20T19:02:09.000Z","updated":"2018-07-27T16:20:32.540Z","comments":true,"path":"2018/02/21/修复引导那些事/","link":"","permalink":"http://www.lolimay.cn/2018/02/21/修复引导那些事/","excerpt":"最近折腾Windows 10和Linux双系统，后来Linux系统不想用了，就直接进PE把Linux那块分区给格掉了。这不格式化还好，一个格式化电脑开机就直接进入grub rescue&gt; 不是吧，这么背！百度一波，原来是磁盘丢失引导导致的问题。抱着折腾不死那就往死里折腾的心态，我开始走上强制关机、进PE修复引导的不归路……","text":"最近折腾Windows 10和Linux双系统，后来Linux系统不想用了，就直接进PE把Linux那块分区给格掉了。这不格式化还好，一个格式化电脑开机就直接进入grub rescue&gt; 不是吧，这么背！百度一波，原来是磁盘丢失引导导致的问题。抱着折腾不死那就往死里折腾的心态，我开始走上强制关机、进PE修复引导的不归路…… 剧情1 从grub rescue&gt;入手 参考资料： grub(GRand Unified Bootload) 是一个来自GUN项目的多操作系统启动程序 从grub rescue&gt;的字面意思可以知道，我们可以通过这个程序手动进入操作系统 Step1 输入ls回车列出所有分区 如：(hd0)(hd0,msdos1)(hd1)(hd1,msdos3)(hd1,msdos2)(hd1,msdos1) 解释一下： hd是hard disk（硬盘）的缩写 msdos全称是Microsoft Disk Operation Syatem ，是一种供微软操作系统使用的分区格式，以前是FAT，现在普遍是NTFS. 这里可以理解成分区 Step2 接着我们要找出是那个分区安装里面安装系统 输入 ls (hd0，msdos1)/boot/grub ls (hd1,msdos3)/boot/grub …… 把所有分区都尝试一遍，直到返回内容不再是：error:unknown filesystem为止 Step3 假设输入ls (hd1,msdos1)/boot/grub 后出现类似以下内容 ./ ../ gfxblacklist.txt ubuntu_kylin_grub_bg.tga i386-pc/ locale/ fonts/ grubenv grub.cfg 则说明，你已经找到了操作系统所在分区 Step4 进行相关配置 输入以下命令: 1234set root=(hd1,msdos1)/boot/grubset prefix=(hd1,msdos1)/boot/grubinsmod normalnormal normal执行之后即进入选择启动项的界面 然而，我在Step2就失败了，试遍了所有分区，全都显示error:unknown filesystem 此法不通，就只好换一种方法了~ 剧情2 了解操作系统引导的整个过程 我觉得这样下去不是办法， 只有初步了解操作系统引导的整个过程才能让我在重装系统方面有更高的造诣~以便以后遇到这方面的问题的才能够更加从容，更重要的是帮妹子装电脑的时候能够更加淡定… （逃 硬盘示意图 **硬盘示意图** 相关概念1. MBR (主引导记录) 每块独立的硬盘都只有一个主引导记录MBR(Main Boot Record，512字节) ，记录着硬盘分区的信息。 主引导记录（MBR，Main Boot Record）是位于磁盘最前边的一段引导（Loader）代码。它负责磁盘操作系统(DOS)对磁盘进行读写时分区合法性的判别、分区引导信息的定位，它由磁盘操作系统(DOS)在对硬盘进行初始化时产生的。 MBR 包括 BOOT LOADER（主引导程序，446字节）、DPT（硬盘分区表，64字节）、MN（结束标志，2字节） MBR不属于任何操作系统，它先于所有操作系统被调用内存，并发挥作用，然后才将控制权交给主分区（活动分区）内的操作系统。 （1）BOOT LOADER Bootloader是嵌入式系统在加电后执行的第一段代码，在它完成CPU和相关硬件的初始化之后，再将操作系统映像或固化的嵌入式应用程序装在到内存中然后跳转到操作系统所在的空间，启动操作系统运行。 （2）DPT MBR模式磁盘：最多4个主分区, 或3个主分区+1个扩展分区，扩展分区又可以分32个逻辑分区。 在DPT共64个字节中，以16个字节为分区表项单位描述一个分区的属性。 （3）MN 结束标志字55 AA（偏移1FEH－偏移1FFH）最后两个字节，是检验主引导记录是否有效的标志。 2. PBR(分区引导记录) PBR (Partition Boot Record) 分区引导记录，是操作系统的引导过程的一个环节。 PBR内的DOS引导代码读取操作系统的引导程序 3. BCD BCD（BCD=Boot Configuration Data ）即启动配置文件 在有vista或windows7的多重操作系统中，系统通过bootmgr程序导入BCD文件完成启动菜单的引导。 引导过程1. Windows 电脑加电后，首先启动BIOS，BIOS自检完毕后，找到硬盘上的MBR，MBR读取DPT，从中找出活动的主分区，然后读取活动主分区的PBR（分区引导记录，也叫DBR），PBR再搜寻分区内的引导程序bootmgr，在bootmgr被找到后，控制权就交给了bootmgr。bootmgr读取\\boot\\bcd文件，如果存在着多个操作系统并且选择操作系 统的等待时间不为0的话，这时就会在显示器上显示操作系统的选择界面。在我们选择启动Windows 后，bootmgr就会去[启动盘寻找 WINDOWS\\system32\\winload.exe，然后通过winload.exe加载Windows内核，从而启动整个Windows系统。 简单概括就是：BIOS—MBR—PBR—Bootmgr—bcd—Winload.exe—内核加载—整个Windows系统 2. Linux 区别在于引导程序，Linux的引导程序一般是grub 简单概括就是： BIOS—MBR—PBR—grub—grub.conf、menu.lst、grub.cfg等配置文件—内核 修复方法差点跑题了，说一说自己最后怎么解决的： But,在说自己解决问题之前，还是要先谈谈为什么装了Windows和Linux双系统 后直接删了Linux分区会出现grub rescue&gt;，实际上grub是分两部分的，一部分在mbr中，一部分在Linux分区的/boot/grub/目录下（grub的一些配置文件类似bootmgr的BCD文件），grub启动Windows的原理是调用bootmagr引导程序。 我们在PE或Windows中格式化Linux分区，就相当于直接删除了/boot/grub/目录下的grub配置文件，所以当然无法正常引导Windows了~ 在理解了系统引导过程后，我们的解决方案也就明确了，重写mgr直接清除grub就好了。 下面介绍常见PE系统（U深度、老毛桃等）自带的四款引导修复工具： DiskGenius —可用于重建主引导记录（MBR） BCDrepair —可用于修复BCD Bootice —可用于重建MBR、PBR、手动编辑BCD文件等 NTBoot —可用于自动、手动修复引导记录 ​ 上述4个引导修复工具不能乱用，乱用是没有效果的，下面分享我修复引导的方法： 1. 使用Bootice重写主引导记录MBR（选择Windows NT 5.x/6.x MBR) 2. 使用Bootice重写分区引导记录PBR（选择BOOTMGR 引导程序) （其实就是为PBR指定引导程序） 3. 使用BCDrepair修复自动修复BCD文件 这样我们就手动把引导过程中的3个关键环节（MBR-PBR-BCD）给手动修复了，想不成功都不行！ 总结（1）Windows引导过程的3个关键步骤： MBR（Windows NT 5.x/6.x）读取活动主分区的PBR PBR调用引导程序（Bootmgr) Bootmgr读取BCD配置文件 （2）Grub引导Windows的步骤 MBR（grub）读取活动主分区的PBR PBR调用引导程序（Bootmgr） Bootmgr读取BCD配置文件 ​ 参考资料： 开机启动遇到grub rescue，无法启动系统怎么办 MBR-百度百科 BOOTLOADER-百度百科 电脑开机的整个过程 电脑最多能分多少个磁盘(区) 硬盘分区表知识——详解硬盘MBR (转) PBR-百度百科 BCD-百度百科 从系统启动原理分析怎样修复多系统引导","categories":[{"name":"重装系统","slug":"重装系统","permalink":"http://www.lolimay.cn/categories/重装系统/"}],"tags":[{"name":"重装系统","slug":"重装系统","permalink":"http://www.lolimay.cn/tags/重装系统/"}]},{"title":"鼠标悬停显示图片","slug":"鼠标悬停显示图片","date":"2018-02-16T20:45:16.000Z","updated":"2018-07-27T16:20:32.653Z","comments":true,"path":"2018/02/17/鼠标悬停显示图片/","link":"","permalink":"http://www.lolimay.cn/2018/02/17/鼠标悬停显示图片/","excerpt":"废话不多说,直接上代码:1234567891011121314&lt;script&gt; function showImg(e, id) &#123; var image = document.getElementById(id); image.style.left = e.clientX + 20 + 'px'; image.style.top = e.clientY + 30 + 'px'; image.style.display = \"block\"; &#125; function hideImg(name) &#123; document.getElementById(name).style.display = \"none\"; &#125;&lt;/script&gt; &lt;img src=\"http://images.lolimay.cn/18-2-17/82883809.jpg\" style=\"display:none;position:absolute\" id=\"pic\"&gt; &lt;a onmousemove=\"showImg(event,'pic')\" onmouseout=\"hideImg('pic')\" style=\"cursor:pointer; \"&gt;鼠标移上显示图片&lt;/a&gt;","text":"废话不多说,直接上代码:1234567891011121314&lt;script&gt; function showImg(e, id) &#123; var image = document.getElementById(id); image.style.left = e.clientX + 20 + 'px'; image.style.top = e.clientY + 30 + 'px'; image.style.display = \"block\"; &#125; function hideImg(name) &#123; document.getElementById(name).style.display = \"none\"; &#125;&lt;/script&gt; &lt;img src=\"http://images.lolimay.cn/18-2-17/82883809.jpg\" style=\"display:none;position:absolute\" id=\"pic\"&gt; &lt;a onmousemove=\"showImg(event,'pic')\" onmouseout=\"hideImg('pic')\" style=\"cursor:pointer; \"&gt;鼠标移上显示图片&lt;/a&gt; 演示:","categories":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.lolimay.cn/categories/Javascript/"}],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://www.lolimay.cn/tags/Javascript/"}]},{"title":"nodejs笔记 ","slug":"nodejs笔记","date":"2018-02-15T08:09:57.000Z","updated":"2018-07-27T16:22:09.130Z","comments":true,"path":"2018/02/15/nodejs笔记/","link":"","permalink":"http://www.lolimay.cn/2018/02/15/nodejs笔记/","excerpt":"这篇文章主要记录我在使用nodejs过程中的一些心得, 方便自己以后查阅~ 命令行特定文本加颜色Step1 npm install colors Step2 引用代码 12var colors = require('colors'); console.log('字符串'.green); //绿色","text":"这篇文章主要记录我在使用nodejs过程中的一些心得, 方便自己以后查阅~ 命令行特定文本加颜色Step1 npm install colors Step2 引用代码 12var colors = require('colors'); console.log('字符串'.green); //绿色 常用颜色: 单词 颜色 black 黑色 red 红色 green 绿色 yellow 黄色 blue 蓝色 magenta 洋红色 cyan 靛青色 参考链接: https://github.com/Marak/colors.js","categories":[{"name":"nodejs","slug":"nodejs","permalink":"http://www.lolimay.cn/categories/nodejs/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"http://www.lolimay.cn/tags/nodejs/"}]},{"title":"AutoHotKey脚本笔记","slug":"AutoHotKey脚本笔记","date":"2018-02-14T23:29:16.000Z","updated":"2018-02-16T07:33:29.704Z","comments":true,"path":"2018/02/15/AutoHotKey脚本笔记/","link":"","permalink":"http://www.lolimay.cn/2018/02/15/AutoHotKey脚本笔记/","excerpt":"这篇文章主要记录我在使用AutoHotKey脚本的过程中的一些心得, 方便自己以后查阅~","text":"这篇文章主要记录我在使用AutoHotKey脚本的过程中的一些心得, 方便自己以后查阅~ 超长字符串赋值 示例代码: 1234567891011121314151617181920212223242526272829303132333435363738text=(热字串和自动替换入门和简单示例尽管热字串主要用于在您输入缩写时进行扩展(自动替换), 但是它们也可以用来运行任何脚本动作. 从这个角度看, 它们类似于 热键, 只是它们通常由多个字符组成(即字符串).要定义热字串, 请用两个双冒号包围用来触发的缩写, 例如:::btw::by the way在上面的例子中, 每当您输入缩写 btw 时会被自动替换为 &quot;by the way&quot;(不过, 默认情况下您必须在输入 btw 后输入 终止符, 例如空格, 句点或回车).上面的 &quot;by the way&quot; 示例被称为自动替换热字串, 因为输入的文本被自动替换为第二个双冒号后指定的字符串. 与之相比, 热字串还可以定义用来执行任何自定义动作, 例如. 注意命令必须放在热字串的 下面.S↓::btw::MsgBox You typed &quot;btw&quot;.return:*:]d:: ; 此热字串通过后面的命令把 &quot;]d&quot; 替换成当前日期和时间.FormatTime, CurrentDateTime,, M/d/yyyy h:mm tt ; 看起来会像 9/1/2005 3:53 PM 这样SendInput %CurrentDateTime%return尽管上面的两个例子不是自动替换的热字串, 但默认情况下您输入的缩写也会被擦除. 这是通过自动退格来实现的, 此特性可以通过 b0 选项 禁用.终止符除非使用了 星号选项, 否则您必须在热字串cd /d &amp;&amp; clear的缩写后输入 终止符 才能触发它. 开始时终止符包含下列字符: -()[]&#123;&#125;&apos;:;&quot;/\\,.?!`n `t(注意 `n 是回车, `t 是 Tab, 且在它们之间还有一个原义的空格). 通过编辑下列示例可以改变这个字符集合, 这个例子中为 所有的 热字串设置新的终止符, 而不仅是在它下面的那些.S↓#Hotstring EndChars -()[]&#123;&#125;:;&apos;&quot;/\\,.?!`n `t选项可以使用下面的两种方式改变热字串的默认行为:)FileAppend, %text%, 1.txt","categories":[{"name":"AutoHotKey","slug":"AutoHotKey","permalink":"http://www.lolimay.cn/categories/AutoHotKey/"}],"tags":[{"name":"AutoHotKey","slug":"AutoHotKey","permalink":"http://www.lolimay.cn/tags/AutoHotKey/"},{"name":"AHK","slug":"AHK","permalink":"http://www.lolimay.cn/tags/AHK/"}]},{"title":"Bat脚本笔记","slug":"Bat脚本笔记","date":"2018-02-14T12:42:54.000Z","updated":"2018-06-19T18:53:08.944Z","comments":true,"path":"2018/02/14/Bat脚本笔记/","link":"","permalink":"http://www.lolimay.cn/2018/02/14/Bat脚本笔记/","excerpt":"这篇文章主要记录自己在使用bat脚本过程中的一些笔记,会不断更新~","text":"这篇文章主要记录自己在使用bat脚本过程中的一些笔记,会不断更新~ 注释行间注释 %注释内容% (不能出现重定向符号和管道符号) 单行注释 :: 注释内容 多行注释 常用的方法:用goto语句实现 12345go start= 注释内容= 注释内容= 注释内容:start ​","categories":[],"tags":[{"name":"bat脚本","slug":"bat脚本","permalink":"http://www.lolimay.cn/tags/bat脚本/"}]},{"title":"CSS使用心得","slug":"CSS使用心得","date":"2018-02-13T16:13:04.000Z","updated":"2018-07-27T16:20:32.600Z","comments":true,"path":"2018/02/14/CSS使用心得/","link":"","permalink":"http://www.lolimay.cn/2018/02/14/CSS使用心得/","excerpt":"这篇文章主要记录自己在使用CSS过程中的一些心得,会不断更新 ! 内容有摘抄的也有自己原创的~","text":"这篇文章主要记录自己在使用CSS过程中的一些心得,会不断更新 ! 内容有摘抄的也有自己原创的~ 伸缩变换代码示例: transform:scale(1.1); 对block元素进行伸缩变换 注意: 此标记对行内元素无效 (如a标签、sapn标签等) 居中① 对block元素居中:margin:0 auto; ② 对行内元素居中: text-align:center; 选择器① 子元素选择器 : 只选择某个元素的子元素 1h1 &gt; strong &#123;color:red;&#125; /* 只让h1的子元素strong的文本变为红色 */ ② 后代选择器 : 只选择某个元素的后代元素 1h1 em &#123;color:red;&#125; /* 只让h1的后代元素中的em的文本变为红色 */ ③ 选择器分组 : 将多个元素样式分为一组,统一配置样式 1h1, p &#123;color:red;&#125; /* 让h1和p标签中的文本颜色为红色 */ 阴影语法: box-shadow: h-shadow v-shadow blur spread color inset; 文本溢出 伪元素伪类伪元素和伪类用于向某些选择器添加特殊的效果 (一) 伪元素 (二) 伪类 文本阴影 字体 堆叠顺序利用 z-index属性改变元素的堆叠顺序. 其默认值是0, 数值越大则元素离用户越近. 注意: 该属性仅对定位元素有效(如: position: relative;) 用法示例: 1234img &#123; position: relative; z-index: 1;&#125; 行高可以利用: line-height 属性设置行间的距离(行高). 我们可以利用**行高**实现垂直对齐.","categories":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/categories/CSS/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.lolimay.cn/tags/CSS/"}]},{"title":"Hexo建博客踩坑总结","slug":"Hexo建博客踩坑总结","date":"2018-02-12T17:28:19.000Z","updated":"2018-07-27T16:20:32.540Z","comments":true,"path":"2018/02/13/Hexo建博客踩坑总结/","link":"","permalink":"http://www.lolimay.cn/2018/02/13/Hexo建博客踩坑总结/","excerpt":"从买域名到完成博客已经过去了好几天了,这几天也算是踩坑无数.其中,有很多坑是可以在网上搜到解决方案、也有好多坑是自己摸索填上的. 现在,我尽量写下自己还能记得的坑,以便能够帮助后来的人:","text":"从买域名到完成博客已经过去了好几天了,这几天也算是踩坑无数.其中,有很多坑是可以在网上搜到解决方案、也有好多坑是自己摸索填上的. 现在,我尽量写下自己还能记得的坑,以便能够帮助后来的人: 坑1 努力将Hexo部署在服务器上 首先,这样的想法是不恰当的. 如果将Hexo部署在服务器上,当你的文章很多的话, 渲染会很吃力, 如果你的服务器太渣的话, 可能一言不合就罢工. 所以在本地渲染好页面再git提交到服务器上才是正解. 因此,网上大部分教程都是采用这种思路: ​ 本地: nodejs+Hexo+git ​ 服务器: git+nginx ​ 关于用Hexo建立博客的细节这里就不再赘述了,这里推荐几个我当初参考的教程: ​ 如何使用阿里云+Hexo搭建个人静态博客? ​ 如何在服务器上搭建hexo博客 优化hexo访问速度-将hexo部署到云主机VPS 坑2 使用Xshell去远程ssh登录 注意! 这是一个大坑 , 在创建 服务器上创建git账户 那一步中要做到 不需要输入密码 自动使用公匙 即可连接至远程仓库. 但是我一开始使用 Xshell登录,却发现不管我怎么配置都需要输入密码. 后来我换git bash直接就可以免密登录. 结论: 千万不要使用Xshell作为你的ssh远程登录工具! 推荐使用git bash去ssh远程登录你的服务器, 在任意界面输入ssh 用户名@主机名IP即可连接远程服务器. 坑3 找不到nginx的默认部署目录​ 在教程如何使用阿里云+Hexo搭建个人静态博客?中,答主认为大部分的nginx的默认部署目录是:/usr/share/nginx ​ 我个人实测, 使用宝塔面板自动安装的nginx的默认部署目录是/www/server/nginx/html 如果你没有找到nginx的默认部署目录的话, 建议你去看看 nginx.conf 的配置信息, 这里面保存了nginx的默认部署目录. 坑4 在本地手动用git bash git init了一下你的博客目录 这样做会把你博客目录下的所有文件全都push上去了,以至于网站根目录下没有发现index.html文件,服务器报403错误. 解决方案是,把你博客目录下的那个隐藏.git文件夹给删掉. 坑5 使用algolia搜索: 提示必须要在_config.yml文件中加上 indexName: ‘xxx’ 配置项​ 然而事实是,我们明明已经在next目录下的_config.yml中 补充完整了这个配置项. ​ 解决方案: 将next目录下的_config.yml文件中的: 123456algolia: applicationID: &apos;xxxxxxx&apos; apiKey: &apos;xxxxxxxxxxxxxxxxxxxxxxxxxxx&apos; adminApiKey: &apos;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&apos; indexName: &apos;xxxxx&apos; chunkSize: 5000 复制到hexo根目录下的原始_config.yml文件的末尾、即可. 坑6 使用algolia搜索总是搜不到任何东西​ 解决方案: 那是因为你未能成功hexo algolia每次网站更新很多文章后,要及时提交数据, 即执行: 12export HEXO_ALGOLIA_INDEXING_KEY=你的唯一搜索Keyhexo algolia 坑7 点击algolia的搜索结果会打开一个莫名其妙地网站:​ 原因是, hexo根目录下的网站url未配置, 示例配置如下: ​ 这里url的值既可以填你的网站的域名也可以填写IP地址. 坑8 Hexo无法渲染出表格解决方案: ① 表格要与上面的文本内容空一行 ② 表格前面不能有Tab或者空格 坑9 因大小写导致的404问题原因: git默认不区分文件和文件夹名称的大小写, 但是url地址却对大小写敏感 解决方案: Step1 找到hexo中关于git的配置文件config 假设你的hexo根目录名为Blog则配置文件路径为Blog\\.deploy_git\\.git\\configStep2 编辑该文件 将ignorecase = true改为ignorecase = false Step3 重新在bash中执行hexo g &amp;&amp; hexo d 还有好多坑一会想不出来,以后想到再说吧~ 下面再推荐一些别人碰到的坑以及美化博客教程: ​ hexo 部署至Git遇到的坑 ​ hexo的next主题个性化配置教程","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.lolimay.cn/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://www.lolimay.cn/tags/Hexo/"},{"name":"Algolia","slug":"Algolia","permalink":"http://www.lolimay.cn/tags/Algolia/"}]},{"title":"Linux文件权限","slug":"linux文件权限","date":"2018-02-12T08:50:42.000Z","updated":"2018-02-15T09:59:09.788Z","comments":true,"path":"2018/02/12/linux文件权限/","link":"","permalink":"http://www.lolimay.cn/2018/02/12/linux文件权限/","excerpt":"linux中有三种文件权限: 读取 (read)、写入 (write) 和执行 (execute) . 它们的具体含义如下表: 权限 含义 读取 对文件而言, 具有读取文件内容的权限对目录来说, 具有浏览目录的权限 写入 对文件而言, 具有新增、修改文件内容的权限对目录来说, 具有删除、移动目录内文件的权限 执行 对文件而言, 具有执行文件的权限对目录来说, 该用户具有进入目录的权限","text":"linux中有三种文件权限: 读取 (read)、写入 (write) 和执行 (execute) . 它们的具体含义如下表: 权限 含义 读取 对文件而言, 具有读取文件内容的权限对目录来说, 具有浏览目录的权限 写入 对文件而言, 具有新增、修改文件内容的权限对目录来说, 具有删除、移动目录内文件的权限 执行 对文件而言, 具有执行文件的权限对目录来说, 该用户具有进入目录的权限 文件权限可以用 3位数字 表示, 也可以用 9位字母表示 , 1个数字等价于3个字母. 下表是常用的linux文件权限: 数字表示 字母表示 444 r--r--r-- 600 rw------- 644 rw-r--r-- 666 rw-rw-rw- 700 rwx--r-- 744 rwxr-xr-x 755 rwxr-xr-x 777 rwxrwxrwx 其中 第1位数字(1-3位字母) 代表 文件所有者 (User) 权限 第2位数字(4-6位字母) 代表 同组用户 (Group) 权限 第3位数字(7-9位字母) 代表 其他用户 (Other) 权限 数字与字母权限的对应关系如下表所示: 权限 数字表示 字母表示 读取 4 r (read) 写入 2 w (write) 执行 1 x (execute) 通过4、2、1的组合，可以得到以下几种权限 权限 数字表示 读取+写入+执行 (rwx) 7 读取+写入 (rw-) 6 读取+执行 (r-x) 5 读取 (r--) 4 没有权限 (---) 0 ① 以 755 等价于 rwxr-xr-x 例：1-3位 7 等于4+2+1, rwx, 文件所有者 (User) 具有 读取+写入+执行 权限；4-6位 5等于4+1+0, r-x，同组用户 (Group) 具有 读取+执行 权限但没有 写入 权限；7-9位 5, 同上也是r-x, 其他用户 (Other) 具有 读取+执行 权限但没有 写入 权限。 ② 设置文件权限的两种方式: chmod a=rwx filename 等价于 chmod 777 filename (a=rwx左边的a是All的缩写) chmod ug=rwx,o=x file 等价于 chmod 771 filename (ug是User和Group的缩写) ③ 755和4755的区别: chmod 755 设置用户的权限为：1.文件所有者可读可写可执行2.与文件所有者同属一个用户组的其他用户可读可执行3.其它用户组可读可执行chmod 4755与chmod 755 的区别在于开头多了一位, 这个4表示其他用户执行文件时，具有与所有者相当的权限","categories":[{"name":"Linux","slug":"Linux","permalink":"http://www.lolimay.cn/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://www.lolimay.cn/tags/Linux/"}]},{"title":"利用AutoHotkey禁用Windows键弹出菜单","slug":"利用AutoHotkey禁用Windows键弹出菜单","date":"2018-02-11T23:02:52.000Z","updated":"2018-07-27T16:20:32.540Z","comments":true,"path":"2018/02/12/利用AutoHotkey禁用Windows键弹出菜单/","link":"","permalink":"http://www.lolimay.cn/2018/02/12/利用AutoHotkey禁用Windows键弹出菜单/","excerpt":"在编写AutoHotkey脚本的过程中, 重映射Windows组合键 一直是我心中的痛,因为这一类快捷键在触发我自定义的Windows组合键功能的同时,还会弹出烦人的Windows开始菜单~ 他喵的,如果是这样,还不如不重写Windows组合键呢~于是,我果断去百度了一波. 无奈AutoHotkey的中文资料实在是太少了,果然还是没找到问题的答案~","text":"在编写AutoHotkey脚本的过程中, 重映射Windows组合键 一直是我心中的痛,因为这一类快捷键在触发我自定义的Windows组合键功能的同时,还会弹出烦人的Windows开始菜单~ 他喵的,如果是这样,还不如不重写Windows组合键呢~于是,我果断去百度了一波. 无奈AutoHotkey的中文资料实在是太少了,果然还是没找到问题的答案~ 最后,我只好去AutoHotkey的官方论坛寻找解决方案,没想到还真给我找到了,哈哈~ 官方论坛某贴 皮卡丘,就决定是你了! 通过~LWin::Send {Bind}{vk07} 禁止Windows徽标键弹出开始菜单. 大功告成! 这个故事告诉我们一定要学好英语,否则连脚本都写不好.. (逃 推荐阅读","categories":[{"name":"AutoHotKey","slug":"AutoHotKey","permalink":"http://www.lolimay.cn/categories/AutoHotKey/"}],"tags":[{"name":"AutoHotKey","slug":"AutoHotKey","permalink":"http://www.lolimay.cn/tags/AutoHotKey/"},{"name":"AHK","slug":"AHK","permalink":"http://www.lolimay.cn/tags/AHK/"}]}]}